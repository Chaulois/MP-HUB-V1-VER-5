--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 50 | Scripts: 14 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.ScreenGui.Key Gui
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Visible"] = false;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Size"] = UDim2.new(0, 336, 0, 237);
G2L["2"]["Position"] = UDim2.new(0, 425, 0, 300);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[Key Gui]];


-- StarterGui.ScreenGui.Key Gui.UICorner
G2L["3"] = Instance.new("UICorner", G2L["2"]);
G2L["3"]["CornerRadius"] = UDim.new(0.85, 0);


-- StarterGui.ScreenGui.Key Gui.TextLabel
G2L["4"] = Instance.new("TextLabel", G2L["2"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["TextSize"] = 52;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0, 322, 0, 53);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[Insert Key:]];
G2L["4"]["Position"] = UDim2.new(0.02083, 0, 0.0303, 0);


-- StarterGui.ScreenGui.Key Gui.TextLabel.UISizeConstraint
G2L["5"] = Instance.new("UISizeConstraint", G2L["4"]);



-- StarterGui.ScreenGui.Key Gui.TextBox
G2L["6"] = Instance.new("TextBox", G2L["2"]);
G2L["6"]["PlaceholderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextWrapped"] = true;
G2L["6"]["TextTransparency"] = 0.75;
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["6"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["6"]["Position"] = UDim2.new(0.20238, 0, 0.25287, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[]];


-- StarterGui.ScreenGui.Key Gui.TextBox.KeyCodeTextboxHandler
G2L["7"] = Instance.new("LocalScript", G2L["6"]);
G2L["7"]["Name"] = [[KeyCodeTextboxHandler]];


-- StarterGui.ScreenGui.Key Gui.TextBox.UISizeConstraint
G2L["8"] = Instance.new("UISizeConstraint", G2L["6"]);



-- StarterGui.ScreenGui.Key Gui.MakeFrameDraggable
G2L["9"] = Instance.new("LocalScript", G2L["2"]);
G2L["9"]["Name"] = [[MakeFrameDraggable]];


-- StarterGui.ScreenGui.Key Gui.UISizeConstraint
G2L["a"] = Instance.new("UISizeConstraint", G2L["2"]);



-- StarterGui.ScreenGui.Key Gui.TextButton
G2L["b"] = Instance.new("TextButton", G2L["2"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextScaled"] = true;
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["b"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[Get Key]];
G2L["b"]["Position"] = UDim2.new(0.20238, 0, 0.55274, 0);


-- StarterGui.ScreenGui.Key Gui.TextButton.UISizeConstraint
G2L["c"] = Instance.new("UISizeConstraint", G2L["b"]);



-- StarterGui.ScreenGui.Key Gui.TextButton.UICorner
G2L["d"] = Instance.new("UICorner", G2L["b"]);
G2L["d"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.ScreenGui.Key Gui.TextButton.CopyPastebinOnClick_Advanced
G2L["e"] = Instance.new("LocalScript", G2L["b"]);
G2L["e"]["Name"] = [[CopyPastebinOnClick_Advanced]];


-- StarterGui.ScreenGui.Main Gui
G2L["f"] = Instance.new("Frame", G2L["1"]);
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Size"] = UDim2.new(0, 476, 0, 474);
G2L["f"]["Position"] = UDim2.new(0.38487, 0, 0.08678, 0);
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Name"] = [[Main Gui]];


-- StarterGui.ScreenGui.Main Gui.UICorner
G2L["10"] = Instance.new("UICorner", G2L["f"]);
G2L["10"]["CornerRadius"] = UDim.new(0, 9);


-- StarterGui.ScreenGui.Main Gui.lolzlabel
G2L["11"] = Instance.new("TextLabel", G2L["f"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextScaled"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Size"] = UDim2.new(0, 476, 0, 50);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[MP Hub]];
G2L["11"]["Name"] = [[lolzlabel]];


-- StarterGui.ScreenGui.Main Gui.lolzlabel.UICorner
G2L["12"] = Instance.new("UICorner", G2L["11"]);
G2L["12"]["CornerRadius"] = UDim.new(0, 9);


-- StarterGui.ScreenGui.Main Gui.lolzlabel.UISizeConstraint
G2L["13"] = Instance.new("UISizeConstraint", G2L["11"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame
G2L["14"] = Instance.new("ScrollingFrame", G2L["f"]);
G2L["14"]["Active"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Size"] = UDim2.new(0, 441, 0, 384);
G2L["14"]["Position"] = UDim2.new(0.04202, 0, 0.1519, 0);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["15"] = Instance.new("TextButton", G2L["14"]);
G2L["15"]["TextWrapped"] = true;
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextSize"] = 14;
G2L["15"]["TextScaled"] = true;
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[Increase Walkspeed by 50]];


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.IncreaseWalkSpeedButton
G2L["16"] = Instance.new("LocalScript", G2L["15"]);
G2L["16"]["Name"] = [[IncreaseWalkSpeedButton]];


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["17"] = Instance.new("UISizeConstraint", G2L["15"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["18"] = Instance.new("TextButton", G2L["14"]);
G2L["18"]["TextWrapped"] = true;
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextSize"] = 14;
G2L["18"]["TextScaled"] = true;
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[Default Walkspeed]];
G2L["18"]["Position"] = UDim2.new(0, 0, 0.06079, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.IncreaseWalkSpeedButton
G2L["19"] = Instance.new("LocalScript", G2L["18"]);
G2L["19"]["Name"] = [[IncreaseWalkSpeedButton]];


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["1a"] = Instance.new("UISizeConstraint", G2L["18"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["1b"] = Instance.new("TextButton", G2L["14"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[c00lclan UI]];
G2L["1b"]["Position"] = UDim2.new(0.00227, 0, 0.18886, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["1c"] = Instance.new("UISizeConstraint", G2L["1b"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
G2L["1d"] = Instance.new("LocalScript", G2L["1b"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["1e"] = Instance.new("TextButton", G2L["14"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[AdminBar2]];
G2L["1e"]["Position"] = UDim2.new(0.00227, 0, 0.25532, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["1f"] = Instance.new("UISizeConstraint", G2L["1e"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["21"] = Instance.new("TextButton", G2L["14"]);
G2L["21"]["TextWrapped"] = true;
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["TextSize"] = 14;
G2L["21"]["TextScaled"] = true;
G2L["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[stigma V3]];
G2L["21"]["Position"] = UDim2.new(0.00227, 0, 0.31782, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["22"] = Instance.new("UISizeConstraint", G2L["21"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
G2L["23"] = Instance.new("LocalScript", G2L["21"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["24"] = Instance.new("TextButton", G2L["14"]);
G2L["24"]["TextWrapped"] = true;
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["TextSize"] = 14;
G2L["24"]["TextScaled"] = true;
G2L["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[Dash]];
G2L["24"]["Position"] = UDim2.new(0, 0, 0.39554, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["25"] = Instance.new("UISizeConstraint", G2L["24"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
G2L["26"] = Instance.new("LocalScript", G2L["24"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton
G2L["27"] = Instance.new("TextButton", G2L["14"]);
G2L["27"]["TextWrapped"] = true;
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["TextSize"] = 14;
G2L["27"]["TextScaled"] = true;
G2L["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["Size"] = UDim2.new(0, 441, 0, 50);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[FlyGui V3]];
G2L["27"]["Position"] = UDim2.new(-0.0068, 0, 0.11625, 0);


-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.UISizeConstraint
G2L["28"] = Instance.new("UISizeConstraint", G2L["27"]);



-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
G2L["29"] = Instance.new("LocalScript", G2L["27"]);



-- StarterGui.ScreenGui.Main Gui.MakeFrameDraggable
G2L["2a"] = Instance.new("LocalScript", G2L["f"]);
G2L["2a"]["Name"] = [[MakeFrameDraggable]];


-- StarterGui.ScreenGui.Main Gui.UISizeConstraint
G2L["2b"] = Instance.new("UISizeConstraint", G2L["f"]);



-- StarterGui.ScreenGui.Main Gui.TextButton
G2L["2c"] = Instance.new("TextButton", G2L["f"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BorderSizePixel"] = 0;
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["TextScaled"] = true;
G2L["2c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2c"]["BackgroundTransparency"] = 1;
G2L["2c"]["Size"] = UDim2.new(0, 75, 0, 47);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Text"] = [[Close]];


-- StarterGui.ScreenGui.Main Gui.TextButton.LocalScript
G2L["2d"] = Instance.new("LocalScript", G2L["2c"]);



-- StarterGui.ScreenGui.Gar
G2L["2e"] = Instance.new("TextButton", G2L["1"]);
G2L["2e"]["TextWrapped"] = true;
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["TextScaled"] = true;
G2L["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["FontFace"] = Font.new([[rbxassetid://12187607287]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["Size"] = UDim2.new(0, 137, 0, 50);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[Open]];
G2L["2e"]["Name"] = [[Gar]];
G2L["2e"]["Position"] = UDim2.new(0.01712, 0, 0.90438, 0);


-- StarterGui.ScreenGui.Gar.UISizeConstraint
G2L["2f"] = Instance.new("UISizeConstraint", G2L["2e"]);



-- StarterGui.ScreenGui.Gar.MakeFrameDraggable
G2L["30"] = Instance.new("LocalScript", G2L["2e"]);
G2L["30"]["Name"] = [[MakeFrameDraggable]];


-- StarterGui.ScreenGui.Gar.UICorner
G2L["31"] = Instance.new("UICorner", G2L["2e"]);
G2L["31"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.ScreenGui.Gar.LocalScript
G2L["32"] = Instance.new("LocalScript", G2L["2e"]);



-- StarterGui.ScreenGui.Key Gui.TextBox.KeyCodeTextboxHandler
local function C_7()
local script = G2L["7"];
	local TEXTBOX_CODE = "K_E_Y_9092233441029"
	
	local textBox = script.Parent
	textBox.FocusLost:Connect(function(enterPressed)
	    if textBox.Text == TEXTBOX_CODE then
	        -- Hide the parent of the TextBox (e.g., a Frame or container)
	        if textBox.Parent and textBox.Parent:IsA("GuiObject") then
	            textBox.Parent.Visible = false
	        end
	        -- Show the Main Gui Frame
	        local screenGui = textBox.Parent and textBox.Parent.Parent
	        if screenGui then
	            local mainGui = screenGui:FindFirstChild("Main Gui")
	            if mainGui and mainGui:IsA("GuiObject") then
	                mainGui.Visible = true
					-- Also make the IncreaseWalkSpeedButton's TextButton visible
					script.Parent.Parent.Parent.Gar.Visible = true
	            end
	        end
	    end
	end)
	
	
end;
task.spawn(C_7);
-- StarterGui.ScreenGui.Key Gui.MakeFrameDraggable
local function C_9()
local script = G2L["9"];
	local frame = script.Parent
	frame.Active = true
	frame.Draggable = false -- Ensure Draggable is off
	
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart = nil
	local startPos = nil
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        local delta = input.Position - dragStart
	        frame.Position = UDim2.new(
	            startPos.X.Scale,
	            startPos.X.Offset + delta.X,
	            startPos.Y.Scale,
	            startPos.Y.Offset + delta.Y
	        )
	    end
	end)
	
	
end;
task.spawn(C_9);
-- StarterGui.ScreenGui.Key Gui.TextButton.CopyPastebinOnClick_Advanced
local function C_e()
local script = G2L["e"];
	local button = script.Parent
	local url = "https://pastebin.com/SCWn2PyW"
	local originalText = button.Text
	
	-- Try to get URL from a sibling TextBox if available
	local function getUrl()
	    local parent = button.Parent
	    if parent then
	        for _, child in parent:GetChildren() do
	            if child:IsA("TextBox") then
	                local text = child.Text
	                if text and #text > 0 then
	                    return text, child
	                end
	            end
	        end
	    end
	    return url, nil
	end
	
	local function notify(title, text)
	    pcall(function()
	        game:GetService("StarterGui"):SetCore("SendNotification", {
	            Title = title,
	            Text = text,
	            Duration = 2
	        })
	    end)
	end
	
	local function tryAllClipboardAPIs(text)
	    local success = false
	    local errors = {}
	
	    -- Roblox CoreGui API (in-game)
	    local ok, err = pcall(function()
	        game:GetService("StarterGui"):SetCore("CopyToClipboard", text)
	    end)
	    if ok then
	        success = true
	    else
	        table.insert(errors, "SetCore failed: " .. tostring(err))
	    end
	
	    -- Studio fallback
	    if typeof(setclipboard) == "function" then
	        local ok2, err2 = pcall(function()
	            setclipboard(text)
	        end)
	        if ok2 then
	            success = true
	        else
	            table.insert(errors, "setclipboard failed: " .. tostring(err2))
	        end
	    end
	
	    -- Synapse X/exploit fallback
	    if typeof(syn) == "table" and typeof(syn.write_clipboard) == "function" then
	        local ok3, err3 = pcall(function()
	            syn.write_clipboard(text)
	        end)
	        if ok3 then
	            success = true
	        else
	            table.insert(errors, "syn.write_clipboard failed: " .. tostring(err3))
	        end
	    end
	
	    -- KRNL exploit clipboard
	    if typeof(clipboard) == "table" and typeof(clipboard.set) == "function" then
	        local ok4, err4 = pcall(function()
	            clipboard.set(text)
	        end)
	        if ok4 then
	            success = true
	        else
	            table.insert(errors, "clipboard.set failed: " .. tostring(err4))
	        end
	    end
	
	    -- Fluxus clipboard
	    if typeof(fluxus) == "table" and typeof(fluxus.copyclipboard) == "function" then
	        local ok5, err5 = pcall(function()
	            fluxus.copyclipboard(text)
	        end)
	        if ok5 then
	            success = true
	        else
	            table.insert(errors, "fluxus.copyclipboard failed: " .. tostring(err5))
	        end
	    end
	
	    return success, errors
	end
	
	button.MouseButton1Click:Connect(function()
	    local link, textBox = getUrl()
	    local copied, errors = tryAllClipboardAPIs(link)
	    if copied then
	        button.Text = "Copied!"
	        notify("Clipboard", "Link copied to clipboard!")
	    else
	        button.Text = "Copy Failed!"
	        notify("Clipboard", "Failed to copy link. Try manually.")
	        -- Fallback: select the TextBox text if available
	        if textBox then
	            textBox:CaptureFocus()
	            textBox.SelectionStart = 1
	            textBox.CursorPosition = #textBox.Text + 1
	        end
	        -- Optionally print errors for debugging
	        print("Clipboard copy failed. Errors:")
	        for _, err in errors do
	            print(err)
	        end
	    end
	    task.wait(1)
	    button.Text = originalText
	end)
	
	
end;
task.spawn(C_e);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.IncreaseWalkSpeedButton
local function C_16()
local script = G2L["16"];
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	local button = script.Parent
	
	local function increaseWalkSpeed()
	    local character = player.Character or player.CharacterAdded:Wait()
	    local humanoid = character:FindFirstChildOfClass("Humanoid")
	    if humanoid then
	        humanoid.WalkSpeed = humanoid.WalkSpeed + 50
	    end
	end
	
	button.MouseButton1Click:Connect(increaseWalkSpeed)
	
	
end;
task.spawn(C_16);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.IncreaseWalkSpeedButton
local function C_19()
local script = G2L["19"];
	button = script.Parent
	
	Char = game.Players.LocalPlayer.Character.Humanoid
	
	button.MouseButton1Click:Connect(function()
		Char.WalkSpeed = 16
		print("Successfully set walkspeed to 16!")
	end)
end;
task.spawn(C_19);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
local function C_1d()
local script = G2L["1d"];
	
	
	script.Parent.MouseButton1Click:Connect(function()
		--Services
		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer
		local PlayerGui = Player:WaitForChild("PlayerGui")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local PhysicsService = game:GetService("PhysicsService")
		local Character       = Player.Character or Player.CharacterAdded:Wait()
		local Humanoid        = Character:WaitForChild("Humanoid")
		local HRP             = Character:WaitForChild("HumanoidRootPart")
		local Mouse           = Player:GetMouse()
		local CollectionService = game:GetService("CollectionService")
		local RunService = game:GetService("RunService")
		local TeleportService = game:GetService("TeleportService")
		local HttpService = game:GetService("HttpService")
		local TweenService = game:GetService("TweenService")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local MarketplaceService = game:GetService("MarketplaceService")
		local StarterGui = game:GetService("StarterGui")
		local Debris = game:GetService("Debris")
		local Lighting = game:GetService("Lighting")
		local SoundService = game:GetService("SoundService")
		local player = Player
	
		local PlaceId = game.PlaceId
		local JobId = game.JobId
		--settings
		local infjump = false
		local invisRunning = false
		local noclipOn = false
		local noclipConn
		local hoverHeight
		local bindFrame, bindConn, waitingBindFunction
		local customBinds = {}
		local infJumpEnabled = false
		local infJumpConnection = nil
		local espOn = false
		local spinOn = false
		local spinBAV, lockBP
		local savedCFrame
		local invisRunning = false
		local InvisibleCharacter = nil
		local OriginalCharacter = nil
		local voidConn = nil
		local flyingEnabled = false
		local invisRunning = false
		local flyBG, flyBV, flyConn
		local ray = workspace.CurrentCamera:ScreenPointToRay(Mouse.X, Mouse.Y)
		local hit, pos = workspace:FindPartOnRay(ray, Character)
		--GUI settings
		local GUI_WIDTH     = 400
		local GUI_HEIGHT    = 320
		local TITLE_HEIGHT  = 30
		local NAV_HEIGHT    = 30
		local FOOTER_HEIGHT = 30
		local GRID_PADDING  = 4
		local GRID_COLUMNS  = 4
	
		math.randomseed(os.time())
		local character_set = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	
		local string_sub = string.sub
		local math_random = math.random
		local table_concat = table.concat
		local character_set_amount = #character_set
		local number_one = 1
		local default_length = 10
	
	
	
		local function generate_string(length)
			local random_string = {}
	
			for int = number_one, length or default_length do
				local random_number = math_random(number_one, character_set_amount)
				local character = string_sub(character_set, random_number, random_number)
	
				random_string[#random_string + number_one] = character
			end
	
			return table_concat(random_string)
		end
		-- Function manager with descriptions
		local FunctionManager = {
			CategorizedFunctions = { All = {} },
			Categories          = { "All" },
			CurrentCategoryIndex= 1,
			Descriptions        = {},
			OnFunctionAdded     = Instance.new("BindableEvent"),
		}
	
		function FunctionManager:register(name, callback, category, description)
			category = category or "General"
	
			if not self.CategorizedFunctions[category] then
				self.CategorizedFunctions[category] = {}
				table.insert(self.Categories, category)
			end
			self.CategorizedFunctions[category][name] = callback
			self.CategorizedFunctions.All[name]        = callback
			self.Descriptions[name]                    = description or ""
			self.OnFunctionAdded:Fire(category, name, callback)
			self.OnFunctionAdded:Fire("All",      name, callback)
		end
	
		function FunctionManager:getCurrentCategory()
			return self.Categories[self.CurrentCategoryIndex]
		end
	
		function FunctionManager:cycleCategory()
			self.CurrentCategoryIndex = self.CurrentCategoryIndex % #self.Categories + 1
			return self:getCurrentCategory()
		end
	
	
	
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name        = generate_string(math_random(1, 10))
		local die = screenGui.Name
		screenGui.ResetOnSpawn= false
		screenGui.Parent      = PlayerGui
		local notificationContainer = Instance.new("Frame")
		notificationContainer.Name = "NotificationContainer"
		notificationContainer.Size = UDim2.new(1, 0, 1, 0)
		notificationContainer.Position = UDim2.new(0, 0, 0, 0)
		notificationContainer.BackgroundTransparency = 1
		notificationContainer.ZIndex = 100
		notificationContainer.Parent = screenGui
		local function Notify(text, title, duration)
			duration = duration or 4
	
			local frame = Instance.new("Frame")
			frame.AnchorPoint = Vector2.new(1, 1)
			frame.Size = UDim2.new(0, 300, 0, 70)
			frame.Position = UDim2.new(1, 320, 1, -10)
			frame.BackgroundColor3 = Color3.fromRGB(40, 0, 0)
			frame.BackgroundTransparency = 0
			frame.BorderSizePixel = 0
			frame.ZIndex = 200
			frame.Parent = notificationContainer
	
			local titleLabel = Instance.new("TextLabel")
			titleLabel.BackgroundTransparency = 1
			titleLabel.Size = UDim2.new(1, -10, 0, 24)
			titleLabel.Position = UDim2.new(0, 5, 0, 4)
			titleLabel.Font = Enum.Font.SourceSansBold
			titleLabel.Text = title or "Notice"
			titleLabel.TextColor3 = Color3.new(1, 1, 1)
			titleLabel.TextSize = 18
			titleLabel.TextXAlignment = Enum.TextXAlignment.Left
			titleLabel.ZIndex = 201
			titleLabel.Parent = frame
	
			local bodyLabel = Instance.new("TextLabel")
			bodyLabel.BackgroundTransparency = 1
			bodyLabel.Size = UDim2.new(1, -10, 1, -30)
			bodyLabel.Position = UDim2.new(0, 5, 0, 28)
			bodyLabel.Font = Enum.Font.SourceSans
			bodyLabel.Text = text or ""
			bodyLabel.TextColor3 = Color3.new(1, 1, 1)
			bodyLabel.TextSize = 14
			bodyLabel.TextWrapped = true
			bodyLabel.TextXAlignment = Enum.TextXAlignment.Left
			bodyLabel.ZIndex = 201
			bodyLabel.Parent = frame
	
			task.defer(function()
				local slideIn = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
					Position = UDim2.new(1, -10, 1, -10)
				})
				slideIn:Play()
			end)
	
	
			task.delay(duration, function()
				local fadeOut = TweenService:Create(frame, TweenInfo.new(0.3), {
					BackgroundTransparency = 1,
					Position = UDim2.new(1, 320, 1, -10)
				})
				local titleFade = TweenService:Create(titleLabel, TweenInfo.new(0.3), {TextTransparency = 1})
				local bodyFade = TweenService:Create(bodyLabel, TweenInfo.new(0.3), {TextTransparency = 1})
	
				fadeOut:Play()
				titleFade:Play()
				bodyFade:Play()
	
				fadeOut.Completed:Wait()
				frame:Destroy()
			end)
		end
	
	
	
	
		local notificationLayout = Instance.new("UIListLayout")
		notificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
		notificationLayout.Padding = UDim.new(0, 6)
		notificationLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
		notificationLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
		notificationLayout.Parent = notificationContainer
		Notify("Welcome to C00lClan!", "Have fun!", 3)
		-- Main frame
		local mainFrame = Instance.new("Frame")
		mainFrame.Name            = generate_string(math_random(1, 10))
		mainFrame.Size            = UDim2.new(0, GUI_WIDTH, 0, GUI_HEIGHT)
		mainFrame.Position        = UDim2.new(0.5, -GUI_WIDTH/2, 0.5, -GUI_HEIGHT/2)
		mainFrame.BackgroundColor3= Color3.fromRGB(25, 5, 5)
		mainFrame.BorderSizePixel = 0
		mainFrame.Parent          = screenGui
	
		-- Tooltip
		local tooltip = Instance.new("TextLabel", screenGui)
		tooltip.Name               = generate_string(math_random(1, 10))
		tooltip.Size               = UDim2.new(0, 200, 0, 40)
		tooltip.BackgroundColor3   = Color3.fromRGB(30,30,30)
		tooltip.BorderSizePixel    = 0
		tooltip.Visible            = false
		tooltip.ZIndex             = 100
		tooltip.ClipsDescendants   = false
		tooltip.TextColor3 = Color3.fromRGB(255, 255, 255)
		tooltip.TextWrapped = true
		-- Title bar
		local titleBar = Instance.new("Frame", mainFrame)
		titleBar.Name             = generate_string(math_random(1, 10))
		titleBar.Size             = UDim2.new(1,0,0,TITLE_HEIGHT)
		titleBar.BackgroundColor3 = Color3.fromRGB(60,0,0)
		titleBar.BorderSizePixel  = 0
	
		local titleLabel = Instance.new("TextLabel", titleBar)
		titleLabel.Size           = UDim2.new(1,-60,1,0)
		titleLabel.Position       = UDim2.new(0,4,0,0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text           = "C00LCLAN V1"
		titleLabel.Font           = Enum.Font.SourceSansBold
		titleLabel.TextSize       = 18
		titleLabel.TextColor3     = Color3.new(1,1,1)
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Name           = generate_string(math_random(1, 10))
	
		local minBtn = Instance.new("TextButton", titleBar)
		minBtn.Name               = generate_string(math_random(1, 10))
		minBtn.Size               = UDim2.new(0,30,1,0)
		minBtn.Position           = UDim2.new(1,-30,0,0)
		minBtn.Text               = "_"
		minBtn.Font               = Enum.Font.SourceSansBold
		minBtn.TextSize           = 18
		minBtn.TextColor3         = Color3.new(1,1,1)
		minBtn.BackgroundColor3   = Color3.fromRGB(80,10,10)
		minBtn.BorderSizePixel    = 0
	
		-- Drag logic
		local dragging, dragInput, dragStart, startPos = false, nil
		local function updateDrag(input)
			local delta = input.Position - dragStart
			mainFrame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
		end
		titleBar.InputBegan:Connect(function(i)
			if i.UserInputType==Enum.UserInputType.MouseButton1 then
				dragging, dragStart, startPos = true, i.Position, mainFrame.Position
				i.Changed:Connect(function()
					if i.UserInputState==Enum.UserInputState.End then dragging=false end
				end)
			end
		end)
		titleBar.InputChanged:Connect(function(i)
			if i.UserInputType==Enum.UserInputType.MouseMovement then dragInput=i end
		end)
		UserInputService.InputChanged:Connect(function(i)
			if i==dragInput and dragging then updateDrag(i) end
		end)
	
		-- Category nav
		local catNav = Instance.new("Frame", mainFrame)
		catNav.Name               = generate_string(math_random(1, 10))
		catNav.Size               = UDim2.new(1,0,0,NAV_HEIGHT)
		catNav.Position           = UDim2.new(0,0,0,TITLE_HEIGHT)
		catNav.BackgroundTransparency = 1
	
		local leftCat = Instance.new("TextButton", catNav)
		leftCat.Size              = UDim2.new(0,50,1,0)
		leftCat.Text              = "<"
		leftCat.Font              = Enum.Font.SourceSansBold
		leftCat.TextSize          = 24
		leftCat.TextColor3        = Color3.new(1,1,1)
		leftCat.BackgroundColor3  = Color3.fromRGB(100,0,0)
		leftCat.BorderSizePixel   = 0
		leftCat.Name              = generate_string(math_random(1, 10))
		local catLabel = Instance.new("TextLabel", catNav)
		catLabel.Size             = UDim2.new(1,-100,1,0)
		catLabel.Position         = UDim2.new(0,50,0,0)
		catLabel.BackgroundTransparency = 1
		catLabel.Text             = "All"
		catLabel.Font             = Enum.Font.SourceSansBold
		catLabel.TextSize         = 18
		catLabel.TextColor3       = Color3.new(1,1,1)
		catNav.Name               = generate_string(math_random(1, 10))
		local rightCat = leftCat:Clone()
		rightCat.Parent           = catNav
		rightCat.Position         = UDim2.new(1,-50,0,0)
		rightCat.Text             = ">"
		rightCat.Name = generate_string(math_random(1, 10))
	
		-- Grid
		local gridFrame = Instance.new("ScrollingFrame", mainFrame)
		gridFrame.Name            = generate_string(math_random(1, 10))
		gridFrame.ClipsDescendants= true
		gridFrame.Size            = UDim2.new(1,-2*GRID_PADDING,0,GUI_HEIGHT-TITLE_HEIGHT-NAV_HEIGHT-FOOTER_HEIGHT-2*GRID_PADDING)
		gridFrame.Position        = UDim2.new(0,GRID_PADDING,0,TITLE_HEIGHT+NAV_HEIGHT+GRID_PADDING)
		gridFrame.BackgroundTransparency = 1
	
		local gridLayout = Instance.new("UIGridLayout", gridFrame)
		gridLayout.Name           = generate_string(math_random(1, 10))
		gridLayout.CellSize       = UDim2.new(0,(GUI_WIDTH-2*GRID_PADDING-(GRID_COLUMNS-1)*GRID_PADDING)/GRID_COLUMNS,0,40)
		gridLayout.CellPadding    = UDim2.new(0,GRID_PADDING,0,GRID_PADDING)
		gridLayout.SortOrder      = Enum.SortOrder.LayoutOrder
	
		-- Footer
		local footer = Instance.new("Frame", mainFrame)
		footer.Name               = generate_string(math_random(1, 10))
		footer.Size               = UDim2.new(1,0,0,FOOTER_HEIGHT)
		footer.Position           = UDim2.new(0,0,1,-FOOTER_HEIGHT)
		footer.BackgroundTransparency = 1
	
		local closeBtn = Instance.new("TextButton", footer)
		closeBtn.Size             = UDim2.new(1,0,1,0)
		closeBtn.Text             = "Close"
		closeBtn.Font             = Enum.Font.SourceSansBold
		closeBtn.TextSize         = 18
		closeBtn.TextColor3       = Color3.new(1,1,1)
		closeBtn.BackgroundColor3 = Color3.fromRGB(100,0,0)
		closeBtn.BorderSizePixel  = 0
		closeBtn.Name             = generate_string(math_random(1, 10))
		-- Minimize toggle
		local minimized = false
		minBtn.MouseButton1Click:Connect(function()
			minimized = not minimized
			if minimized == true then
				mainFrame.BackgroundTransparency = 1
			else
				mainFrame.BackgroundTransparency = 0
			end
			gridFrame.Visible     = not minimized
			catNav.Visible        = not minimized
			footer.Visible        = not minimized
			minBtn.Text           = minimized and "◻" or "_"
		end)
		local function NotifyERROR(text)
			Notify(text, "ERROR", 3)
		end
		-- Build the grid and tooltips
		local function updateGrid()
			for _, c in ipairs(gridFrame:GetChildren()) do
				if c:IsA("TextButton") then c:Destroy() end
			end
			local cat = FunctionManager:getCurrentCategory()
			catLabel.Text = cat
	
			for name, cb in pairs(FunctionManager.CategorizedFunctions[cat]) do
				local btn = Instance.new("TextButton")
				btn.Size             = UDim2.new(1,0,0,40)
				btn.BackgroundColor3 = Color3.fromRGB(70,10,10)
				btn.BorderSizePixel  = 0
				btn.Font             = Enum.Font.SourceSansBold
				btn.TextSize         = 16
				btn.TextColor3       = Color3.new(1,1,1)
				btn.Text             = name
				btn.TextWrapped      = true
				btn.Parent           = gridFrame
				btn.Name             = generate_string(math_random(1, 10))
	
				-- tooltip
				local desc = FunctionManager.Descriptions[name]
				btn.MouseMoved:Connect(function()
					if desc ~= "" and desc ~= nil then
						tooltip.Text     = desc
						tooltip.Position = UDim2.new(0,Mouse.X,0,Mouse.Y - tooltip.Size.Y.Offset - 4)
						tooltip.Visible = true
					end
				end)
				btn.MouseLeave:Connect(function() tooltip.Visible = false end)
	
				btn.MouseButton1Click:Connect(function()
					pcall(cb)
				end)
			end
		end
		local logo = Instance.new("ImageLabel")
		logo.Name                 = generate_string(math_random(1, 10))
		logo.BackgroundTransparency = 1
		logo.Size                 = UDim2.new(1, 0, 0, 100)
		logo.Position             = UDim2.new(0, -50, 0, -100)
		logo.Image                = "rbxassetid://87486058304609"
		logo.ScaleType            = Enum.ScaleType.Fit              
		logo.Parent               = mainFrame
		-- nav buttons
		leftCat.MouseButton1Click:Connect(function()
			FunctionManager.CurrentCategoryIndex = (FunctionManager.CurrentCategoryIndex - 2) % #FunctionManager.Categories + 1
			updateGrid()
		end)
		rightCat.MouseButton1Click:Connect(function()
			FunctionManager:cycleCategory()
			updateGrid()
		end)
		closeBtn.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)
		FunctionManager.OnFunctionAdded.Event:Connect(updateGrid)
	
	
	
		-- Initialize
		updateGrid()
	
		FunctionManager:register("Decal Spam", function()
			local decalID = 8408806737
			local function exPro(root)
				for _, v in pairs(root:GetChildren()) do
					if v:IsA("Decal") and v.Texture ~= "http://www.roblox.com/asset/?id="..decalID then
						v.Parent = nil
					elseif v:IsA("BasePart") then
						v.Material = "Plastic"
						v.Transparency = 0
						local One = Instance.new("Decal", v)
						local Two = Instance.new("Decal", v)
						local Three = Instance.new("Decal", v)
						local Four = Instance.new("Decal", v)
						local Five = Instance.new("Decal", v)
						local Six = Instance.new("Decal", v)
						One.Texture = "http://www.roblox.com/asset/?id="..decalID
						Two.Texture = "http://www.roblox.com/asset/?id="..decalID
						Three.Texture = "http://www.roblox.com/asset/?id="..decalID
						Four.Texture = "http://www.roblox.com/asset/?id="..decalID
						Five.Texture = "http://www.roblox.com/asset/?id="..decalID
						Six.Texture = "http://www.roblox.com/asset/?id="..decalID
						One.Face = "Front"
						Two.Face = "Back"
						Three.Face = "Right"
						Four.Face = "Left"
						Five.Face = "Top"
						Six.Face = "Bottom"
					end
					exPro(v)
				end
			end
			local function asdf(root)
				for _, v in pairs(root:GetChildren()) do
					asdf(v)
				end
			end
			exPro(game.Workspace)
			asdf(game.Workspace)
	
			local s = Instance.new("Sky")
			s.Name = "Sky"
			s.Parent = game.Lighting
			local skyboxID = 8408806737
			s.SkyboxBk = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxDn = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxFt = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxLf = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxRt = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxUp = "http://www.roblox.com/asset/?id="..skyboxID
			game.Lighting.TimeOfDay = 12
	
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			while true do
				game.Lighting.Ambient = Color3.new(math.random() , math.random() , math.random())
				wait(0.2)
				game.Lighting.ShadowColor = Color3.new(math.random() , math.random() , math.random())
				wait(0.2) 
			end
		end, "Troll", "NOT FE")
		FunctionManager:register("JOHN DOE", function()
	
			local redSkyboxAssetId = "rbxassetid://1012887"
			local sky = Lighting:FindFirstChildOfClass("Sky")
			if not sky then
				sky = Instance.new("Sky", Lighting)
			end
			sky.SkyboxBk = redSkyboxAssetId
			sky.SkyboxDn = redSkyboxAssetId
			sky.SkyboxFt = redSkyboxAssetId
			sky.SkyboxLf = redSkyboxAssetId
			sky.SkyboxRt = redSkyboxAssetId
			sky.SkyboxUp = redSkyboxAssetId
	
			if not ReplicatedStorage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then
				local detection = Instance.new("Decal")
				detection.Name = "juisdfj0i32i0eidsuf0iok"
				detection.Parent = ReplicatedStorage
			end
	
			local screenGui = Instance.new("ScreenGui")
			screenGui.Name = "PersistentSoundGui"
			screenGui.ResetOnSpawn = false
			screenGui.Parent = player:WaitForChild("PlayerGui")
	
			local button = Instance.new("TextButton")
			button.Size = UDim2.new(0, 150, 0, 50)
			button.Position = UDim2.new(0.02, 0, 0.477, 0)
			button.Text = "Sound Toggle"
			button.Font = Enum.Font.SourceSansBold
			button.TextSize = 20
			button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			button.TextColor3 = Color3.new(1, 1, 1)
			button.Parent = screenGui
	
			local backgroundSound = SoundService:FindFirstChild("PersistentBGSound")
			if not backgroundSound then
				backgroundSound = Instance.new("Sound")
				backgroundSound.Name = "PersistentBGSound"
				backgroundSound.SoundId = "rbxassetid://19094700"
				backgroundSound.PlaybackSpeed = 0.221
				backgroundSound.Looped = true
				backgroundSound.Volume = 1
				backgroundSound.Parent = SoundService
				backgroundSound:Play()
			end
	
			button.Activated:Connect(function()
				backgroundSound.Playing = not backgroundSound.Playing
			end)
	
			local function setupCharacter(character)
				local humanoid = character:WaitForChild("Humanoid")
				local torso = character:WaitForChild("Torso")
				local hrp = character:WaitForChild("HumanoidRootPart")
	
				local tool = Instance.new("Tool")
				tool.Name = "Slash"
				tool.RequiresHandle = false
				tool.Parent = player.Backpack
	
				tool.Activated:Connect(function()
					local animation = Instance.new("Animation")
					animation.AnimationId = "rbxassetid://186934658"
					local track = humanoid:LoadAnimation(animation)
					track:Play()
					track:AdjustSpeed(2)
	
					local s = Instance.new("Sound", torso)
					s.SoundId = "rbxassetid://28144425"
					s:Play()
	
					task.wait(0.2)
	
					local s2 = Instance.new("Sound", torso)
					s2.SoundId = "rbxassetid://429400881"
					s2.Volume = 0.2
					s2:Play()
				end)
	
				local naeeym = Instance.new("BillboardGui", character)
				naeeym.Size = UDim2.new(0, 100, 0, 40)
				naeeym.StudsOffset = Vector3.new(0, 2, 0)
				naeeym.Adornee = character:WaitForChild("Head")
	
				local tecks = Instance.new("TextLabel", naeeym)
				tecks.BackgroundTransparency = 1
				tecks.BorderSizePixel = 0
				tecks.Font = Enum.Font.Fantasy
				tecks.TextSize = 24
				tecks.TextStrokeTransparency = 0
				tecks.TextStrokeColor3 = Color3.new(0, 0, 0)
				tecks.TextColor3 = Color3.new(0, 0, 0)
				tecks.Size = UDim2.new(1, 0, 0.5, 0)
				tecks.Text = "John Doe"
	
				local function changeName(newName)
					tecks.Text = newName
				end
	
				local function shakeTag()
					local originalOffset = naeeym.StudsOffset
					for _ = 1, 10 do
						naeeym.StudsOffset = originalOffset + Vector3.new(math.random(-1,1), math.random(-1,1), math.random(-1,1))
						task.wait(0.05)
					end
					naeeym.StudsOffset = originalOffset
				end
	
				coroutine.wrap(function()
					while character:IsDescendantOf(workspace) do
						changeName("BURN IN HELL")
						shakeTag()
						task.wait(0.2)
						changeName("STOP")
						task.wait(0.1)
						changeName("JUST GIVE UP")
						shakeTag()
						task.wait(0.2)
						changeName("STOP")
						shakeTag()
						task.wait(0.2)
						changeName("JOHN DOE")
						shakeTag()
						task.wait(0.3)
						changeName("HOPELESS")
						shakeTag()
						task.wait(0.3)
					end
				end)()
	
				local footPartSize = Vector3.new(10, 0.5, 10)
				local floorPartColor = BrickColor.Black()
				local floorMaterial = Enum.Material.Neon
				local yOffset = -2.8
				local lastPosition = hrp.Position
				local standingTimer = 0
	
				RunService.Heartbeat:Connect(function(dt)
					if not character:IsDescendantOf(workspace) then return end
					local currentPosition = hrp.Position
					standingTimer += dt
					local distanceMoved = (currentPosition - lastPosition).Magnitude
					local stepPosition = Vector3.new(currentPosition.X, hrp.Position.Y + yOffset, currentPosition.Z)
	
					local function createFootstep(position)
						local part = Instance.new("Part")
						part.Size = footPartSize
						part.Position = position
						part.Anchored = true
						part.CanCollide = false
						part.BrickColor = floorPartColor
						part.Material = floorMaterial
						part.Transparency = 0.5
						part.Parent = workspace
						task.spawn(function()
							for i = 1, 10 do
								part.Transparency = i * 0.03
								task.wait(0.05)
							end
						end)
						Debris:AddItem(part, 1)
					end
	
					if distanceMoved > 1 then
						createFootstep(stepPosition)
						lastPosition = currentPosition
						standingTimer = 0
					elseif standingTimer > 0.5 then
						createFootstep(stepPosition)
						standingTimer = 0
					end
				end)
	
				local movel = 0.1
				local hiddenfling = true
	
				local function fling()
					while hiddenfling and character:IsDescendantOf(workspace) do
						if hrp then
							local originalVelocity = hrp.Velocity
							hrp.Velocity = originalVelocity * 10000 + Vector3.new(0, 10000, 0)
							RunService.RenderStepped:Wait()
							hrp.Velocity = originalVelocity
							RunService.Stepped:Wait()
							hrp.Velocity = originalVelocity + Vector3.new(0, movel, 0)
							movel = -movel
						end
						RunService.Heartbeat:Wait()
					end
				end
				coroutine.wrap(fling)()
			end
	
			player.CharacterAdded:Connect(setupCharacter)
			if player.Character then
				setupCharacter(player.Character)
			end
	
			local Players = game:GetService("Players")
			local UserInputService = game:GetService("UserInputService")
	
			local player = Players.LocalPlayer
			local mouse = player:GetMouse()
	
			local function teleportToMousePosition()
				local character = player.Character
				if not character or not character:FindFirstChild("HumanoidRootPart") then
					return
				end
	
				local target = mouse.Hit
				if target then
					character:MoveTo(target.Position)
				end
			end
	
			UserInputService.InputBegan:Connect(function(input, gameProcessed)
				if gameProcessed then return end
	
				if input.KeyCode == Enum.KeyCode.T then
					teleportToMousePosition()
				end
			end)
		end, "Trolling", "BROKEN")
		FunctionManager:register("Invis gui", function()
			loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()
		end, "Trolling", "Credits to the original maker!")
		FunctionManager:register("DANCE", function()
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://27789359" 
			local track = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			track:Play()
		end, "Fun", "DANCE DANCE")
		FunctionManager:register("Sound GUI", function()
			local gui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("SoundGui")
			if gui then
				gui:Destroy()
				return
			end
			local SoundGui = Instance.new("ScreenGui")
			local Frame = Instance.new("Frame")
			local AddSoundId = Instance.new("TextButton")
			local SoundIds = Instance.new("TextBox")
			local Default = Instance.new("TextButton")
			local Credits = Instance.new("TextLabel")
			local Title = Instance.new("TextLabel")
			local Swap = Instance.new("ImageButton")
			local PlayBackSpeed = Instance.new("TextBox")
			local Volume = Instance.new("TextBox")
			local Looped = Instance.new("TextBox")
			local Exit = Instance.new("ImageButton")
			local Frame2 = Instance.new("Frame")
			local Open = Instance.new("ImageButton")
			local spoky = Instance.new("Sound")
			local c00lflag = Instance.new("Sound")
			local drag = Instance.new("UIDragDetector")
			drag.Parent = Frame
			c00lflag.Name = "c00lsound23sas"
			c00lflag.Parent = Frame
			spoky.Parent = Frame
			spoky.SoundId = "rbxassetid://95156028272944"
			spoky.Volume = 3
			spoky.PlaybackSpeed = 0.2
			spoky.Name = "spoky"
			--Properties:
	
			SoundGui.Name = "SoundGui"
			SoundGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			SoundGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			SoundGui.ResetOnSpawn = false
	
			Frame.Parent = SoundGui
			Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Frame.BorderColor3 = Color3.fromRGB(255, 0, 4)
			Frame.BorderSizePixel = 2
			Frame.Position = UDim2.new(0, 700, 0, 300)
			Frame.Size = UDim2.new(0, 398, 0, 206)
	
			AddSoundId.Name = "AddSoundId"
			AddSoundId.Parent = Frame
			AddSoundId.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			AddSoundId.BorderColor3 = Color3.fromRGB(255, 0, 0)
			AddSoundId.BorderSizePixel = 2
			AddSoundId.Position = UDim2.new(0.118090451, 0, 0.718446612, 0)
			AddSoundId.Size = UDim2.new(0, 307, 0, 36)
			AddSoundId.Font = Enum.Font.Arial
			AddSoundId.Text = "Add Sound!"
			AddSoundId.TextColor3 = Color3.fromRGB(255, 255, 255)
			AddSoundId.TextSize = 29.000
	
			SoundIds.Name = "SoundIds"
			SoundIds.Parent = Frame
			SoundIds.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			SoundIds.BorderColor3 = Color3.fromRGB(255, 0, 0)
			SoundIds.BorderSizePixel = 2
			SoundIds.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			SoundIds.Size = UDim2.new(0, 307, 0, 33)
			SoundIds.Font = Enum.Font.Arial
			SoundIds.PlaceholderText = "Add a sound ID here!, No rbx://"
			SoundIds.Text = ""
			SoundIds.TextColor3 = Color3.fromRGB(255, 255, 255)
			SoundIds.TextScaled = true
			SoundIds.TextSize = 14.000
			SoundIds.TextWrapped = true
	
			Default.Name = "Default"
			Default.Parent = Frame
			Default.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Default.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Default.BorderSizePixel = 2
			Default.Position = UDim2.new(0.118090451, 0, 0.529126227, 0)
			Default.Size = UDim2.new(0, 307, 0, 28)
			Default.Font = Enum.Font.Arial
			Default.Text = "Spooky Scary Skeletons!"
			Default.TextColor3 = Color3.fromRGB(255, 255, 255)
			Default.TextSize = 23.000
	
			Credits.Name = "Credits"
			Credits.Parent = Frame
			Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Credits.BackgroundTransparency = 1.000
			Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Credits.BorderSizePixel = 0
			Credits.Position = UDim2.new(0.577889442, 0, 0.9174757, 0)
			Credits.Size = UDim2.new(0, 153, 0, 17)
			Credits.Font = Enum.Font.SourceSans
			Credits.Text = "made by: 1known. On discord!"
			Credits.TextColor3 = Color3.fromRGB(255, 255, 255)
			Credits.TextSize = 14.000
	
			Title.Name = "Title"
			Title.Parent = Frame
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.BorderColor3 = Color3.fromRGB(255, 0, 4)
			Title.BorderSizePixel = 2
			Title.Position = UDim2.new(0.208542719, 0, 0.0291262139, 0)
			Title.Size = UDim2.new(0, 231, 0, 48)
			Title.Font = Enum.Font.Arial
			Title.Text = "c00lSound GUI!"
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 33.000
			Title.TextWrapped = true
	
			Swap.Name = "Swap"
			Swap.Parent = Frame
			Swap.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Swap.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Swap.BorderSizePixel = 0
			Swap.Position = UDim2.new(0.904522598, 0, 0.33495146, 0)
			Swap.Size = UDim2.new(0, 23, 0, 21)
			Swap.Image = "rbxassetid://2500573769"
	
			PlayBackSpeed.Name = "PlayBackSpeed"
			PlayBackSpeed.Parent = Frame
			PlayBackSpeed.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			PlayBackSpeed.BorderColor3 = Color3.fromRGB(255, 0, 0)
			PlayBackSpeed.BorderSizePixel = 2
			PlayBackSpeed.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			PlayBackSpeed.Size = UDim2.new(0, 307, 0, 33)
			PlayBackSpeed.Visible = false
			PlayBackSpeed.Font = Enum.Font.Arial
			PlayBackSpeed.PlaceholderText = "Playback speed, Enter a number!"
			PlayBackSpeed.Text = "1"
			PlayBackSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
			PlayBackSpeed.TextScaled = true
			PlayBackSpeed.TextSize = 14.000
			PlayBackSpeed.TextWrapped = true
	
			Volume.Name = "Volume"
			Volume.Parent = Frame
			Volume.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Volume.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Volume.BorderSizePixel = 2
			Volume.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			Volume.Size = UDim2.new(0, 307, 0, 33)
			Volume.Visible = false
			Volume.Font = Enum.Font.Arial
			Volume.PlaceholderText = "Volume! Enter a number."
			Volume.Text = "0.5"
			Volume.TextColor3 = Color3.fromRGB(255, 255, 255)
			Volume.TextScaled = true
			Volume.TextSize = 14.000
			Volume.TextWrapped = true
	
			Looped.Name = "Looped"
			Looped.Parent = Frame
			Looped.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Looped.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Looped.BorderSizePixel = 2
			Looped.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			Looped.Size = UDim2.new(0, 307, 0, 33)
			Looped.Visible = false
			Looped.Font = Enum.Font.Arial
			Looped.PlaceholderText = "Is it looped?, Type: False or True"
			Looped.Text = "False"
			Looped.TextColor3 = Color3.fromRGB(255, 255, 255)
			Looped.TextScaled = true
			Looped.TextSize = 14.000
			Looped.TextWrapped = true
	
			Exit.Name = "Exit"
			Exit.Parent = Frame
			Exit.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Exit.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Exit.BorderSizePixel = 2
			Exit.Position = UDim2.new(0.921999991, 0, 0.0289999992, 0)
			Exit.Size = UDim2.new(0, 25, 0, 23)
			Exit.Image = "rbxassetid://14930908086"
	
			Frame2.Name = "Frame2"
			Frame2.Parent = SoundGui
			Frame2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Frame2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Frame2.BorderSizePixel = 0
			Frame2.Position = UDim2.new(0.984443069, 0, 0.841666639, 0)
			Frame2.Size = UDim2.new(0, 25, 0, 23)
			Frame2.Visible = false
	
			Open.Name = "Open"
			Open.Parent = Frame2
			Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Open.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Open.BorderSizePixel = 2
			Open.Position = UDim2.new(-0.0312646478, 0, -0.0113339629, 0)
			Open.Size = UDim2.new(0, 25, 0, 23)
			Open.Image = "rbxassetid://14930908086"
	
			-- Scripts:
	
			local function GSSVM_fake_script() -- AddSoundId.LocalScript 
				local script = Instance.new('LocalScript', AddSoundId)
	
				local parent = script.Parent
	
				parent.Activated:Connect(function()
					local SoundId = parent.Parent:WaitForChild("SoundIds").Text
					local Playbackspeed = parent.Parent:WaitForChild("PlayBackSpeed").Text
					local Volume = parent.Parent:WaitForChild("Volume").Text
					local looped = parent.Parent:WaitForChild("Looped").Text
					if SoundId == "" then
						parent.Text = "No Sound ID!"
						wait(2)
						parent.Text = "Add Sound!"
						return
					end
	
					local id = "rbxassetid://" .. SoundId
					local speed = tonumber(Playbackspeed) or 1
					local existingSound = game.Workspace:FindFirstChild("c00lsound23sas")
	
					if existingSound then
						existingSound.SoundId = id
						existingSound.PlaybackSpeed = speed
						existingSound.Volume = Volume
						if looped == "False" then
							existingSound.Looped = false
						elseif looped == "True"	then
							existingSound.Looped = true
						else
							existingSound.Looped = false
						end
						existingSound:Play()
					else
						local clonedSound = parent.Parent.c00lsound23sas:Clone()
						clonedSound.Parent = game.Workspace
						clonedSound.SoundId = id
						clonedSound.PlaybackSpeed = speed
						clonedSound.Volume = Volume
						if looped == "False" then
							clonedSound.Looped = false
						elseif looped == "True"	then
							clonedSound.Looped = true
						else
							clonedSound.Looped = false
						end
						clonedSound.Looped = looped
	
						clonedSound:Play()
					end
	
					parent.Text = "Injected Sound Succesfully!, Be sure to enter a correct ID if it doesnt work!"
					parent.TextScaled = true
					wait(3.5)
					parent.TextScaled = false
					parent.Text = "Add Sound!"
				end)
	
			end
			coroutine.wrap(GSSVM_fake_script)()
			local function MWUVEW_fake_script() -- Default.LocalScript 
				local script = Instance.new('LocalScript', Default)
	
				local parent = script.Parent
				local sound = parent.Parent.spoky
	
				parent.Activated:Connect(function()
					if sound.Playing == true then
						sound.Playing = false
					else
						sound.Playing = true
					end
				end)
			end
			coroutine.wrap(MWUVEW_fake_script)()
			local function BIKZQ_fake_script() -- Swap.LocalScript 
				local script = Instance.new('LocalScript', Swap)
	
				local parent = script.Parent
				local playback = parent.Parent.PlayBackSpeed
				local Sound = parent.Parent.SoundIds
				local volume = parent.Parent.Volume
				local looped = parent.Parent.Looped
				parent.Activated:Connect(function()
					if Sound.Visible == true then
						Sound.Visible = false
						playback.Visible = true
						volume.Visible = false
						looped.Visible = false
	
					elseif playback.Visible ==true then
						playback.Visible = false
						Sound.Visible = false
						volume.Visible = true
						looped.Visible = false
	
					elseif volume.Visible == true then
						Sound.Visible = false
						playback.Visible = false
						volume.Visible = false
						looped.Visible = true
					elseif looped.Visible == true then
						Sound.Visible = true
						playback.Visible = false
						volume.Visible = false
						looped.Visible = false
					end
				end)
			end
			coroutine.wrap(BIKZQ_fake_script)()
			local function AXYPXC_fake_script() -- Exit.LocalScript 
				local script = Instance.new('LocalScript', Exit)
	
				local parent = script.Parent
				local main = parent.Parent
	
				parent.Activated:Connect(function()
					main.Parent.Frame2.Visible = true
					main.Visible = false
	
				end)
			end
			coroutine.wrap(AXYPXC_fake_script)()
			local function WHTXC_fake_script() -- Open.LocalScript 
				local script = Instance.new('LocalScript', Open)
	
				local parent = script.Parent
				local main = parent.Parent.Parent.Frame
	
				parent.Activated:Connect(function()
					main.Visible = true
					parent.Parent.Visible = false
				end)
			end
			coroutine.wrap(WHTXC_fake_script)()
		end, "General", "NOT FE")
		FunctionManager:register("Bind Key", function()
			if bindFrame then return end 
	
			local gui = Player:FindFirstChild("PlayerGui"):FindFirstChild(die)
			if not gui then NotifyERROR("Gui not found!"); return end
			screenGui = gui
	
			bindFrame = Instance.new("Frame")
			bindFrame.Name = generate_string(math_random(1, 10))
			bindFrame.Size = UDim2.new(1,0,1,0)
			bindFrame.BackgroundColor3 = Color3.new(0,0,0)
			bindFrame.BackgroundTransparency = 0.5
			bindFrame.ZIndex = 50
			bindFrame.Parent = screenGui
	
			local panel = Instance.new("Frame")
			panel.Name = generate_string(math_random(1, 10))
			panel.Size = UDim2.new(0, 300, 0, 400)
			panel.Position = UDim2.new(0.5, -150, 0.5, -200)
			panel.BackgroundColor3 = Color3.fromRGB(35,35,35)
			panel.BorderSizePixel = 0
			panel.ZIndex = 51
			panel.Parent = bindFrame
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Size = UDim2.new(0, 60, 0, 24)
			closeBtn.Position = UDim2.new(1, -64, 0, 4)
			closeBtn.Text = "Close"
			closeBtn.Font = Enum.Font.SourceSansBold
			closeBtn.TextSize = 14
			closeBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3 = Color3.new(1,1,1)
			closeBtn.ZIndex = 52
			closeBtn.Parent = panel
			closeBtn.MouseButton1Click:Connect(function()
				bindFrame:Destroy()
				bindFrame = nil
				if bindConn then bindConn:Disconnect(); bindConn = nil end
			end)
	
			local title = Instance.new("TextLabel")
			title.Size = UDim2.new(1, -8, 0, 24)
			title.Position = UDim2.new(0, 4, 0, 4)
			title.BackgroundTransparency = 1
			title.Font = Enum.Font.SourceSansBold
			title.TextSize = 18
			title.TextColor3 = Color3.new(1,1,1)
			title.Text = "Bind Key to Function"
			title.ZIndex = 52
			title.Parent = panel
	
			local list = Instance.new("ScrollingFrame")
			list.Size = UDim2.new(1, -8, 1, -40)
			list.Position = UDim2.new(0, 4, 0, 32)
			list.CanvasSize = UDim2.new(0,0,0,0)
			list.ScrollBarThickness = 6
			list.ZIndex = 51
			list.Parent = panel
	
			local uiList = Instance.new("UIListLayout")
			uiList.Padding = UDim.new(0,4)
			uiList.SortOrder = Enum.SortOrder.LayoutOrder
			uiList.Parent = list
	
			local function refreshList()
				for _, child in ipairs(list:GetChildren()) do
					if child:IsA("TextButton") or child:IsA("TextLabel") then
						child:Destroy()
					end
				end
	
				for _, cat in ipairs(FunctionManager.Categories) do
					local hdr = Instance.new("TextLabel")
					hdr.Size = UDim2.new(1,0,0,24)
					hdr.BackgroundTransparency = 1
					hdr.Font = Enum.Font.SourceSansBold
					hdr.TextSize = 16
					hdr.TextColor3 = Color3.new(1,1,0)
					hdr.Text = "["..cat.."]"
					hdr.ZIndex = 51
					hdr.Parent = list
	
					for name, cb in pairs(FunctionManager:getFunctionsInCategory(cat)) do
						local btn = Instance.new("TextButton")
						btn.Size = UDim2.new(1,0,0,24)
						btn.Font = Enum.Font.SourceSans
						btn.TextSize = 14
						btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
						btn.TextColor3 = Color3.new(1,1,1)
						btn.ZIndex = 51
	
						local bound = {}
						for key, fn in pairs(customBinds) do
							if fn == cb then table.insert(bound, tostring(key)) end
						end
						local suffix = #bound>0 and " ("..table.concat(bound, ",")..")" or ""
						btn.Text = name..suffix
						btn.Parent = list
	
						btn.MouseButton1Click:Connect(function()
							waitingBindFunction = { cb = cb, btn = btn, name = name }
							btn.Text = name.." → [Press a key]"
						end)
					end
				end
	
				list.CanvasSize = UDim2.new(0,0,0, uiList.AbsoluteContentSize.Y + 8)
			end
			bindConn = UserInputService.InputBegan:Connect(function(input, gameProcessed)
				if gameProcessed or not waitingBindFunction then return end
				if input.UserInputType == Enum.UserInputType.Keyboard then
					customBinds[input.KeyCode] = waitingBindFunction.cb
					waitingBindFunction.btn.Text = waitingBindFunction.name.." ("..tostring(input.KeyCode)..")"
					waitingBindFunction = nil
				end
			end)
			refreshList()
	
		end, "Utility", "BUGGED")
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				local fn = customBinds[input.KeyCode]
				if fn and type(fn) == "function" then
					pcall(fn)
				end
			end
		end)
		FunctionManager:register("JumpUp", function()
			local char = Player.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then hrp.Velocity = Vector3.new(0, 100, 0) end
		end, "Movement", "Leap into the air!")
	
	
		FunctionManager:register("Sit", function()
			local hum = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid")
			if hum then hum.Sit = true end
		end, "Movement", "SIT DOWN")
	
	
		FunctionManager:register("INF JUMP", function()
			infJumpEnabled = not infJumpEnabled
	
			if infJumpEnabled then
				local debounce = false
	
				infJumpConnection = UserInputService.JumpRequest:Connect(function()
					if debounce then return end
					debounce = true
	
					local character = Player.Character
					local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
					if humanoid then
						humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					end
	
					task.wait()
					debounce = false
				end)
			else
				if infJumpConnection then
					infJumpConnection:Disconnect()
					infJumpConnection = nil
				end
			end
		end, "Movement", "Jump Forever!")
	
		FunctionManager:register("WalkSpeed Slider", function()
			if screenGui:FindFirstChild("WalkSpeedModal") then return end
	
	
			local overlay = Instance.new("Frame")
			overlay.Name               = "WalkSpeedModal"
			overlay.Size               = UDim2.new(1,0,1,0)
			overlay.Position           = UDim2.new(0,0,0,0)
			overlay.BackgroundColor3   = Color3.new(0,0,0)
			overlay.BackgroundTransparency = 0.5
			overlay.ZIndex             = 50
			overlay.Parent             = screenGui
	
			local panel = Instance.new("Frame")
			panel.Name                  = "SliderPanel"
			panel.Size                  = UDim2.new(0, 300, 0, 100)
			panel.Position              = UDim2.new(0.5, -150, 0.5, -50)
			panel.BackgroundColor3      = Color3.fromRGB(40,40,40)
			panel.BorderSizePixel       = 0
			panel.ZIndex                = 51
			panel.Parent                = overlay
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Name               = "Close"
			closeBtn.Size               = UDim2.new(0,60,0,24)
			closeBtn.Position           = UDim2.new(1,-64,0,4)
			closeBtn.Font               = Enum.Font.SourceSansBold
			closeBtn.TextSize           = 14
			closeBtn.Text               = "Close"
			closeBtn.BackgroundColor3   = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3         = Color3.new(1,1,1)
			closeBtn.ZIndex             = 52
			closeBtn.Parent             = panel
			closeBtn.MouseButton1Click:Connect(function()
				overlay:Destroy()
			end)
	
			local label = Instance.new("TextLabel")
			label.Name                  = "ValueLabel"
			label.Size                  = UDim2.new(1,-8,0,24)
			label.Position              = UDim2.new(0,4,0,4)
			label.BackgroundTransparency= 1
			label.Font                  = Enum.Font.SourceSansBold
			label.TextSize              = 18
			label.TextColor3            = Color3.new(1,1,1)
			label.Text                  = "WalkSpeed: " .. tostring(Humanoid.WalkSpeed)
			label.ZIndex                = 52
			label.Parent                = panel
	
			local track = Instance.new("Frame")
			track.Name                  = "Track"
			track.Size                  = UDim2.new(1,-16,0,20)
			track.Position              = UDim2.new(0,8,0,40)
			track.BackgroundColor3      = Color3.fromRGB(60,60,60)
			track.BorderSizePixel       = 0
			track.ZIndex                = 51
			track.Parent                = panel
	
			local fill = Instance.new("Frame")
			fill.Name                   = "Fill"
			fill.Size                   = UDim2.new(
				math.clamp((Humanoid.WalkSpeed - 8)/(100-8),0,1), 0,
				1, 0
			)
			fill.BackgroundColor3       = Color3.fromRGB(100,200,100)
			fill.BorderSizePixel        = 0
			fill.ZIndex                 = 52
			fill.Parent                 = track
	
			local dragging = false
			local minS, maxS = 8, 100
	
			local function update(x)
				local rel = math.clamp((x - track.AbsolutePosition.X)/track.AbsoluteSize.X, 0,1)
				local v = math.floor(minS + (maxS-minS)*rel)
				Humanoid.WalkSpeed = v
				label.Text = "WalkSpeed: "..v
				fill.Size = UDim2.new(rel,0,1,0)
			end
	
			track.InputBegan:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					update(i.Position.X)
				end
			end)
			track.InputEnded:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
			UserInputService.InputChanged:Connect(function(i)
				if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
					update(i.Position.X)
				end
			end)
		end, "Movement", "Control your walkspeed!")
	
	
	
		FunctionManager:register("Server Hop", function()
			local success, res = pcall(function()
				return game:HttpGet(
					"https://games.roblox.com/v1/games/" ..
						PlaceId ..
						"/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true"
				)
			end)
	
			if not success then
				return NotifyERROR("[Server Hop] HTTP request failed")
			end
	
			local body
			local ok, err = pcall(function()
				body = HttpService:JSONDecode(res)
			end)
			if not ok or type(body) ~= "table" or type(body.data) ~= "table" then
				return NotifyERROR("[Server Hop] Invalid JSON response")
			end
	
			local servers = {}
			for _, v in ipairs(body.data) do
				if type(v) == "table"
					and tonumber(v.playing)
					and tonumber(v.maxPlayers)
					and v.playing < v.maxPlayers
					and v.id ~= JobId then
					table.insert(servers, v.id)
				end
			end
	
			if #servers == 0 then
				return NotifyERROR("[Server Hop] No available servers found")
			end
	
			local choice = servers[math.random(1, #servers)]
			TeleportService:TeleportToPlaceInstance(PlaceId, choice, Players.LocalPlayer)
		end, "Utility","Changes Servers")
	
		FunctionManager:register("TP Behind Closest", function()
	
			if not  HRP then
				NotifyERROR("No HumanoidRootPart found.")
				return
			end
	
			local closestPlayer
			local shortestDistance = math.huge
	
	
			for _, otherPlayer in ipairs(Players:GetPlayers()) do
				if otherPlayer ~= Player and otherPlayer.Character then
					local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
					if otherRoot then
						local distance = (otherRoot.Position - HRP.Position).Magnitude
						if distance < shortestDistance then
							shortestDistance = distance
							closestPlayer = otherPlayer
						end
					end
				end
			end
	
			if closestPlayer and closestPlayer.Character then
				local targetRoot = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					local behindPosition = targetRoot.CFrame.Position - targetRoot.CFrame.LookVector * 3
					local newCFrame = CFrame.new(behindPosition, targetRoot.Position) 
					HRP.CFrame = newCFrame
				end
			else
				NotifyERROR("No nearby player found.")
			end
		end, "Movement", "Owai moi, shinderu. NANI?")
		FunctionManager:register("Scare Closest Player", function()
	
			if not HRP then
				NotifyERROR("Could not find your HumanoidRootPart.")
				return
			end
	
			local closestPlayer, closestDistance = nil, math.huge
			for _, otherPlayer in ipairs(Players:GetPlayers()) do
				if otherPlayer ~= Player and otherPlayer.Character then
					local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
					if otherRoot then
						local dist = (otherRoot.Position - HRP.Position).Magnitude
						if dist < closestDistance then
							closestDistance = dist
							closestPlayer = otherPlayer
						end
					end
				end
			end
	
			if closestPlayer and closestPlayer.Character then
				local targetRoot = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					local oldPos = HRP.CFrame
					HRP.CFrame = targetRoot.CFrame + targetRoot.CFrame.lookVector * 2
					HRP.CFrame = CFrame.new(HRP.Position, targetRoot.Position)
					task.wait(0.5)
					HRP.CFrame = oldPos
				end
			else
				NotifyERROR("No target player nearby.")
			end
		end, "Fun", "FNAF reference")
		FunctionManager:register("ESP Toggle", function()
			espOn = not espOn
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr.Character and plr ~= Player then
					local head = plr.Character:FindFirstChild("Head")
					if head then
						local bb = head:FindFirstChild("ESP") or Instance.new("BillboardGui", head)
						bb.Name = "ESP"
						bb.Size = UDim2.new(0,80,0,20)
						bb.AlwaysOnTop = true
						local lbl = bb:FindFirstChild("Name") or Instance.new("TextLabel", bb)
						lbl.Name = "Name"
						lbl.BackgroundTransparency = 1
						lbl.Size = UDim2.new(1,0,1,0)
						lbl.TextColor3 = Color3.new(1,0,0)
						lbl.TextScaled = true
						lbl.Text = plr.Name
						bb.Enabled = espOn
					end
				end
			end
			Notify("ESP " .. (espOn and "Enabled" or "Disabled"), "SYSTEM", 3)
		end, "Visual", "ur cooked i just got wallhacks")
		FunctionManager:register("JumpPowerSlider", function()
			if screenGui:FindFirstChild("JumpPowerModal") then return end
			Humanoid.UseJumpPower = true
			local overlay = Instance.new("Frame")
			overlay.Name               = "JumpPowerModal"
			overlay.Size               = UDim2.new(1,0,1,0)
			overlay.Position           = UDim2.new(0,0,0,0)
			overlay.BackgroundColor3   = Color3.new(0,0,0)
			overlay.BackgroundTransparency = 0.5
			overlay.ZIndex             = 50
			overlay.Parent             = screenGui
	
	
			local panel = Instance.new("Frame")
			panel.Name                  = "JumpPanel"
			panel.Size                  = UDim2.new(0, 300, 0, 100)
			panel.Position              = UDim2.new(0.5, -150, 0.5, -50)
			panel.BackgroundColor3      = Color3.fromRGB(40,40,40)
			panel.BorderSizePixel       = 0
			panel.ZIndex                = 51
			panel.Parent                = overlay
	
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Name               = "Close"
			closeBtn.Size               = UDim2.new(0,60,0,24)
			closeBtn.Position           = UDim2.new(1,-64,0,4)
			closeBtn.Font               = Enum.Font.SourceSansBold
			closeBtn.TextSize           = 14
			closeBtn.Text               = "Close"
			closeBtn.BackgroundColor3   = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3         = Color3.new(1,1,1)
			closeBtn.ZIndex             = 52
			closeBtn.Parent             = panel
			closeBtn.MouseButton1Click:Connect(function()
				overlay:Destroy()
			end)
	
	
			local label = Instance.new("TextLabel")
			label.Name                  = "ValueLabel"
			label.Size                  = UDim2.new(1,-8,0,24)
			label.Position              = UDim2.new(0,4,0,4)
			label.BackgroundTransparency= 1
			label.Font                  = Enum.Font.SourceSansBold
			label.TextSize              = 18
			label.TextColor3            = Color3.new(1,1,1)
			label.Text                  = "JumpPower: " .. tostring(Humanoid.JumpPower)
			label.ZIndex                = 52
			label.Parent                = panel
	
	
			local track = Instance.new("Frame")
			track.Name                  = "Track"
			track.Size                  = UDim2.new(1,-16,0,20)
			track.Position              = UDim2.new(0,8,0,40)
			track.BackgroundColor3      = Color3.fromRGB(60,60,60)
			track.BorderSizePixel       = 0
			track.ZIndex                = 51
			track.Parent                = panel
	
			local fill = Instance.new("Frame")
			fill.Name                   = "Fill"
			fill.Size                   = UDim2.new(
				math.clamp((Humanoid.JumpPower - 50)/(200-50),0,1), 0,
				1, 0
			)
			fill.BackgroundColor3       = Color3.fromRGB(100,200,100)
			fill.BorderSizePixel        = 0
			fill.ZIndex                 = 52
			fill.Parent                 = track
	
	
			local dragging = false
			local minJ, maxJ = 50, 200
	
			local function update(x)
				local rel = math.clamp((x - track.AbsolutePosition.X)/track.AbsoluteSize.X, 0,1)
				local v = math.floor(minJ + (maxJ-minJ)*rel)
				Humanoid.JumpPower = v
				label.Text = "JumpPower: "..v
				fill.Size = UDim2.new(rel,0,1,0)
			end
	
			track.InputBegan:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					update(i.Position.X)
				end
			end)
			track.InputEnded:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
			UserInputService.InputChanged:Connect(function(i)
				if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
					update(i.Position.X)
				end
			end)
		end, "Movement", "Control your jumppower")
	
	
	
		FunctionManager:register("Spin Bot", function()
			spinOn = not spinOn
			if spinOn then
				if not HRP then return NotifyERROR("No HRP!") end
	
	
				lockBP = Instance.new("BodyPosition")
				lockBP.Name = "SpinLockBP"
				lockBP.Position = HRP.Position
				lockBP.MaxForce = Vector3.new(1e6, 1e6, 1e6)
				lockBP.P = 1e5
				lockBP.D = 0
				lockBP.Parent = HRP
	
	
				spinBAV = Instance.new("BodyAngularVelocity")
				spinBAV.Name = "SpinBAV"
				spinBAV.AngularVelocity = Vector3.new(0, 10000, 0) 
				spinBAV.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
				spinBAV.P = 1e5
				spinBAV.Parent = HRP
	
				NotifyERROR("Spin Bot On")
			else
				if spinBAV then
					spinBAV:Destroy()
					spinBAV = nil
				end
				if lockBP then
					lockBP:Destroy()
					lockBP = nil
				end
				NotifyERROR("Spin Bot Off")
			end
		end, "Visual", "Speeeeen")
	
		FunctionManager:register("TP To Mouse", function()
			if hit then
				HRP.CFrame = CFrame.new(pos + Vector3.new(0, 3, 0))
				warn("Teleported to mouse")
			end
		end, "Movement", "BUGGED")
		FunctionManager:register("Save Position", function()
			savedCFrame = HRP.CFrame
			Notify("Position Saved", "SYSTEM", 3)
		end, "Utility", "Checkpoint")
		FunctionManager:register("Load Position", function()
			if savedCFrame then
				HRP.CFrame = savedCFrame
				Notify("Position Loaded", "SYSTEM", 3)
			else
				NotifyERROR("No Position Saved")
			end
		end, "Utility", "Reload")
	
	
		FunctionManager:register("No‑Clip", function()
			noclipOn = not noclipOn
	
			if noclipOn then
				hoverHeight = HRP.Position.Y
	
				while noclipOn == true do
					task.wait(0.01)
	
					for _, part in ipairs(Character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = false
						end
					end
	
					local pos = HRP.Position
					HRP.CFrame = CFrame.new(pos.X, hoverHeight, pos.Z)
				end
	
				Notify("No‑Clip ON (locked at height)", "SYSTEM", 3)
			else
				for _, part in ipairs(Character:GetDescendants()) do
					if part:IsA("BasePart") then
						part.CanCollide = true
					end
				end
				Notify("No‑Clip OFF", "SYSTEM", 3)
			end
		end, "Movement", "NOCLIP")
	
		FunctionManager:register("DarkDex", function()
			--Maybe works?
			loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()	
		end, "General", "Take a peek under the hood")
		FunctionManager:register("SimpleSpy", function()
			--also maybe works?
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end, "Catch remotes")
		FunctionManager:register("Orbit All Nearby Parts", function()
			local radius = 20
			local height = 3
			local orbitSpeed = 2
	
			local speaker = Players.LocalPlayer
			local character = speaker.Character or speaker.CharacterAdded:Wait()
			local root = character:FindFirstChild("HumanoidRootPart")
			if not root then
				NotifyERROR("No HumanoidRootPart found.")
				return
			end
	
			local origin = root.Position
			local orbitParts = {}
	
			for _, part in ipairs(workspace:GetDescendants()) do
				if part:IsA("BasePart") and not part.Anchored and not part:IsDescendantOf(workspace.Terrain) then
					local isInCharacter = false
	
					for _, player in ipairs(Players:GetPlayers()) do
						local char = player.Character
						if char and part:IsDescendantOf(char) then
							isInCharacter = true
							break
						end
					end
	
	
					if not isInCharacter and (part.Position - origin).Magnitude <= radius then
						if not CollectionService:HasTag(part, "OrbitPart") then
							if part:CanSetNetworkOwnership() then
								part:SetNetworkOwner(speaker)
							else
								warn("Cannot set network owner for part:", part.Name)
							end
							part.CanCollide = false
							CollectionService:AddTag(part, "OrbitPart")
							table.insert(orbitParts, part)
						end
	
					end
				end
			end
	
			if #orbitParts == 0 then
				warn("No parts found for orbit.")
				return
			end
	
			local angleOffset = 2 * math.pi / #orbitParts
	
			for i, part in ipairs(orbitParts) do
				local angle = angleOffset * i
	
				local startPos = root.Position + Vector3.new(
					math.cos(angle) * radius,
					height,
					math.sin(angle) * radius
				)
	
				part.Position = startPos
	
				local bodyGyro = Instance.new("BodyGyro")
				bodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
				bodyGyro.P = 1e4
				bodyGyro.CFrame = CFrame.new(part.Position, root.Position)
				bodyGyro.Parent = part
	
				local bodyVel = Instance.new("BodyVelocity")
				bodyVel.MaxForce = Vector3.new(1e5, 1e5, 1e5)
				bodyVel.P = 1e4
				bodyVel.Parent = part
	
				local conn
				conn = RunService.Heartbeat:Connect(function(dt)
					if not root or not root.Parent then
						conn:Disconnect()
						return
					end
	
					angle += orbitSpeed * dt
	
					local orbitCenter = root.Position
					local orbitPoint = orbitCenter + Vector3.new(
						math.cos(angle) * radius,
						height,
						math.sin(angle) * radius
					)
	
					local tangent = Vector3.new(
						-math.sin(angle),
						0,
						math.cos(angle)
					).Unit * orbitSpeed * radius
	
					bodyVel.Velocity = tangent
					bodyGyro.CFrame = CFrame.new(part.Position, orbitCenter)
					part.Position = orbitPoint
				end)
			end
	
			warn("Orbiting", #orbitParts, "parts around you.")
		end, "Fun", "You have to be near the parts for a while for it to work")
	
	
		local function toggleInvisibility()
			if invisRunning then return end
			invisRunning = true
	
			local player = Players.LocalPlayer
			repeat task.wait(0.1) until player.Character
			local originalChar = player.Character
			originalChar.Archivable = true
	
			local invisibleChar = originalChar:Clone()
			invisibleChar.Name   = ""
			invisibleChar.Parent = Lighting
	
			-- clone transparency
			for _, part in ipairs(invisibleChar:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Transparency = (part.Name == "HumanoidRootPart") and 1 or 0.5
				end
			end
	
			-- we’ll need these in nested functions:
			local isInvis = false
			local voidConn, deathConn, steppedConn
	
			-- Respawn helper (puts you back to originalChar)
			local function Respawn()
				invisRunning = false
				if steppedConn then steppedConn:Disconnect() end
				if deathConn   then deathConn:Disconnect()   end
	
				player.Character = originalChar
				originalChar.Parent = workspace
				-- destroy the extra humanoid
				local clonedHum = originalChar:FindFirstChildWhichIsA("Humanoid")
				if clonedHum then clonedHum:Destroy() end
	
				invisibleChar.Parent = nil
			end
	
			-- fix for falling through the void
			local voidY = workspace.FallenPartsDestroyHeight
			steppedConn = RunService.Stepped:Connect(function()
				local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
				if not hrp then return end
				local y = hrp.Position.Y
				if (voidY < 0 and y <= voidY) or (voidY >= 0 and y >= voidY) then
					Respawn()
				end
			end)
	
			-- if cloned character dies
			local clonedHum = invisibleChar:FindFirstChildWhichIsA("Humanoid")
			deathConn = clonedHum.Died:Connect(Respawn)
	
			-- now swap them
			local camCF = workspace.CurrentCamera.CFrame
			local hrpCF = originalChar.HumanoidRootPart.CFrame
	
			originalChar:MoveTo(Vector3.new(0, math.pi*1e6, 0))
			workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
			task.wait(0.2)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	
			invisibleChar.Parent = workspace
			invisibleChar.HumanoidRootPart.CFrame = hrpCF
			player.Character = invisibleChar
	
			-- re‑enable animations
			for _, a in ipairs(player.Character:GetDescendants()) do
				if a.Name == "Animate" and a:IsA("Model") then
					a.Disabled = true; a.Disabled = false
				end
			end
			workspace.CurrentCamera:remove()
			wait(.1)
			repeat wait() until player.Character ~= nil
			workspace.CurrentCamera.CameraSubject = player.Character:FindFirstChildWhichIsA('Humanoid')
			workspace.CurrentCamera.CameraType = "Custom"
			player.CameraMinZoomDistance = 0.5
			player.CameraMaxZoomDistance = 400
			player.CameraMode = "Classic"
			player.Character.Head.Anchored = false
			player.Character.Animate.Enabled = false
			player.Character.Animate.Enabled = true
			Notify("You are now invisible!", "System", 3)
		end
	
		FunctionManager:register(
			"Invisible",
			toggleInvisibility,
			"Fun",
			"Make your character invisible until you respawn or die"
		)
	
	
		FunctionManager:register("Fly", function()
			if not HRP then
				warn("No HumanoidRootPart found; cannot fly.")
				return
			end
	
			flyingEnabled = not flyingEnabled
	
			if flyingEnabled then
	
				flyBG = Instance.new("BodyGyro")
				flyBG.P = 9e4
				flyBG.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
				flyBG.CFrame = HRP.CFrame
				flyBG.Parent = HRP
	
	
				flyBV = Instance.new("BodyVelocity")
				flyBV.MaxForce = Vector3.new(9e4, 9e4, 9e4)
				flyBV.Velocity = Vector3.new(0, 0, 0)
				flyBV.Parent = HRP
	
				flyConn = RunService.Heartbeat:Connect(function()
					local camCFrame = workspace.CurrentCamera.CFrame
					local dir = Vector3.new()
	
					if UserInputService:IsKeyDown(Enum.KeyCode.W) then
						dir = dir + camCFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.S) then
						dir = dir - camCFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.A) then
						dir = dir - camCFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.D) then
						dir = dir + camCFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
						dir = dir + Vector3.new(0, 1, 0)
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
						dir = dir - Vector3.new(0, 1, 0)
					end
	
					if dir.Magnitude > 0 then
						dir = dir.Unit * 50
					end
					flyBV.Velocity = dir
					flyBG.CFrame = CFrame.new(HRP.Position, HRP.Position + camCFrame.LookVector)
				end)
	
			else
				if flyConn then flyConn:Disconnect() flyConn = nil end
				if flyBG then flyBG:Destroy() flyBG = nil end
				if flyBV then flyBV:Destroy() flyBV = nil end
	
	
			end
		end, "Movement", "Fly around!")
	
		FunctionManager:register("HatHub", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/inkdupe/hat-scripts/refs/heads/main/updatedhathub.lua"))()
		end, "Troll", "Credits to original maker!")
		FunctionManager:register("Hitbox Extender", function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/AAPVdev/scripts/refs/heads/main/UI_LimbExtender.lua'))()
		end, "Troll", "Extends hitboxes")
		FunctionManager:register("Part Grab", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/v0c0n1337/scripts/refs/heads/main/Unachored_parts_controller_v2.lua.txt"))()
		end, "Troll", "Much better part grab")
		FunctionManager:register("Hat Script", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/ocfi/Scp-096-Obfuscated/refs/heads/main/obuf"))()
		end, "Troll", "HATS")
	
	
	
		FunctionManager:register("PART ORBIT", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/aZjaAr6F", true))()
		end, "Troll", "Probs better orbit")
	
	
		FunctionManager:register("chat unbanner", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/aDFhvMC4", true))()
		end, "Utility", "Credits to the original maker!")
		FunctionManager:register("Fling GUI", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/VynRhxJV", true))()
		end, "Troll", "Credits to the original maker!")
	
	
	
		--init
		updateGrid()
	end)
end;
task.spawn(C_1d);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
local function C_20()
local script = G2L["20"];
	script.Parent.MouseButton1Click:Connect(function()
		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer
		local AdminBar = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
		AdminBar.Name = "AdminBar2"
	
		local TextBox = Instance.new("TextBox", AdminBar)
		TextBox.Size = UDim2.new(0, 400, 0, 30)
		TextBox.Position = UDim2.new(0.5, -200, 1, -40)
		TextBox.PlaceholderText = "Enter command here (use ; to chain, / to split args)"
		TextBox.TextScaled = true
		TextBox.ClearTextOnFocus = false
	
		-- Command registry
		local commands = {}
	
		-- Utility functions
		local function getPlayer(name)
			for _, plr in ipairs(Players:GetPlayers()) do
				if string.lower(plr.Name):sub(1, #name) == string.lower(name) then
					return plr
				end
			end
			return nil
		end
	
		-- Command handlers
		commands.jump = function(args)
			local target = getPlayer(args[1]) or LocalPlayer
			target.Character:FindFirstChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
		end
	
		commands.kill = function(args)
			local target = getPlayer(args[1]) or LocalPlayer
			local humanoid = target.Character:FindFirstChild("Humanoid")
			if humanoid then humanoid.Health = 0 end
		end
	
		commands.sparkles = function(args)
			local target = getPlayer(args[1]) or LocalPlayer
			local sparkles = Instance.new("Sparkles", target.Character:FindFirstChild("HumanoidRootPart"))
		end
	
		commands.unsparkles = function(args)
			local target = getPlayer(args[1]) or LocalPlayer
			for _, v in pairs(target.Character:GetDescendants()) do
				if v:IsA("Sparkles") then v:Destroy() end
			end
		end
	
		commands.fly = function(args)
			local target = getPlayer(args[1]) or LocalPlayer
			-- Simple fly script
			local char = target.Character
			local hrp = char:FindFirstChild("HumanoidRootPart")
			if not hrp then return end
	
			local bodyGyro = Instance.new("BodyGyro", hrp)
			local bodyVel = Instance.new("BodyVelocity", hrp)
	
			bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
			bodyGyro.P = 9e4
			bodyGyro.CFrame = hrp.CFrame
	
			bodyVel.Velocity = Vector3.new(0, 50, 0)
			bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
	
			task.delay(5, function()  -- Fly lasts 5 seconds
				bodyGyro:Destroy()
				bodyVel:Destroy()
			end)
		end
	
		-- Command executor
		local function executeCommand(cmdStr)
			local cmds = string.split(cmdStr, ";")
			for _, cmd in ipairs(cmds) do
				local parts = string.split(cmd, "/")
				local name = string.lower(parts[1])
				table.remove(parts, 1)
	
				if commands[name] then
					pcall(function()
						commands[name](parts)
					end)
				end
			end
		end
	
		TextBox.FocusLost:Connect(function(enter)
			if enter and TextBox.Text ~= "" then
				executeCommand(TextBox.Text)
				TextBox.Text = ""
			end
		end)
	end)
end;
task.spawn(C_20);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
local function C_23()
local script = G2L["23"];
	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local playerGui = player:WaitForChild("PlayerGui")
	
		if playerGui:FindFirstChild("StigmaUltimate") then
			playerGui.StigmaUltimate:Destroy()
		end
	
		local gui = Instance.new("ScreenGui", playerGui)
		gui.Name = "StigmaUltimate"
	
		local frame = Instance.new("Frame", gui)
		frame.Size = UDim2.new(0, 350, 0, 180)
		frame.Position = UDim2.new(0.1, 0, 0.1, 0)
		frame.BackgroundColor3 = Color3.new(1, 1, 1)
		frame.BorderSizePixel = 1
		frame.Active = true
		frame.Draggable = true
	
		-- Layered text for title (TextLabels)
		local function createThickTextLabel(parent, text, position, size, textSize)
			local offsets = {
				Vector2.new(-1,0),
				Vector2.new(1,0),
				Vector2.new(0,-1),
				Vector2.new(0,1),
			}
			for _,offset in ipairs(offsets) do
				local shadow = Instance.new("TextLabel", parent)
				shadow.Size = size
				shadow.Position = UDim2.new(position.X.Scale, position.X.Offset + offset.X, position.Y.Scale, position.Y.Offset + offset.Y)
				shadow.BackgroundTransparency = 1
				shadow.Text = text
				shadow.Font = Enum.Font.Legacy
				shadow.TextColor3 = Color3.new(0, 0, 0)
				shadow.TextSize = textSize
				shadow.TextXAlignment = Enum.TextXAlignment.Left
				shadow.ZIndex = 1
			end
			local label = Instance.new("TextLabel", parent)
			label.Size = size
			label.Position = position
			label.BackgroundTransparency = 1
			label.Text = text
			label.Font = Enum.Font.Legacy
			label.TextColor3 = Color3.new(0, 0, 0)
			label.TextSize = textSize
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.ZIndex = 2
			return label
		end
	
		local title = createThickTextLabel(frame, "stigma v3", UDim2.new(0,3,0,2), UDim2.new(0,150,0,30), 12)
	
		local textbox = Instance.new("TextBox", frame)
		textbox.Size = UDim2.new(0, 230, 0, 140)
		textbox.Position = UDim2.new(0, 5, 0, 40)
		textbox.ClearTextOnFocus = false
		textbox.MultiLine = true
		textbox.Text = ""
		textbox.Font = Enum.Font.Legacy
		textbox.TextColor3 = Color3.new(0, 0, 0)
		textbox.BackgroundColor3 = Color3.new(1, 1, 1)
		textbox.BorderSizePixel = 1
		textbox.TextSize = 10
		textbox.TextWrapped = true
		textbox.TextXAlignment = Enum.TextXAlignment.Left
		textbox.TextYAlignment = Enum.TextYAlignment.Top
	
		-- Function to create thick TextButton (5 layered buttons with offsets)
		local function createThickButton(parent, text, position, size, textSize, callback)
			local offsets = {
				Vector2.new(-1,0),
				Vector2.new(1,0),
				Vector2.new(0,-1),
				Vector2.new(0,1),
			}
			local buttons = {}
			for _,offset in ipairs(offsets) do
				local btn = Instance.new("TextButton", parent)
				btn.Size = size
				btn.Position = UDim2.new(position.X.Scale, position.X.Offset + offset.X, position.Y.Scale, position.Y.Offset + offset.Y)
				btn.BackgroundColor3 = Color3.new(0.9, 0.9, 0.9)
				btn.BorderSizePixel = 1
				btn.Text = text
				btn.Font = Enum.Font.Legacy
				btn.TextColor3 = Color3.new(0, 0, 0)
				btn.TextSize = textSize
				btn.AutoButtonColor = false
				btn.ZIndex = 1
				btn.TextWrapped = false
				table.insert(buttons, btn)
			end
			local mainBtn = Instance.new("TextButton", parent)
			mainBtn.Size = size
			mainBtn.Position = position
			mainBtn.BackgroundColor3 = Color3.new(0.9, 0.9, 0.9)
			mainBtn.BorderSizePixel = 1
			mainBtn.Text = text
			mainBtn.Font = Enum.Font.Legacy
			mainBtn.TextColor3 = Color3.new(0, 0, 0)
			mainBtn.TextSize = textSize
			mainBtn.AutoButtonColor = true
			mainBtn.ZIndex = 2
			mainBtn.TextWrapped = false
	
			mainBtn.MouseButton1Click:Connect(callback)
	
			return mainBtn
		end
	
		local execute = createThickButton(frame, "EXE", UDim2.new(0, 240, 0, 40), UDim2.new(0, 100, 0, 50), 12, function()
			pcall(function()
				loadstring(textbox.Text)()
			end)
		end)
	
		local clear = createThickButton(frame, "CLEAR", UDim2.new(0, 240, 0, 95), UDim2.new(0, 100, 0, 50), 12, function()
			textbox.Text = ""
		end)
	end)
end;
task.spawn(C_23);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
local function C_26()
local script = G2L["26"];
	script.Parent.MouseButton1Click:Connect(function()
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local LocalPlayer = Players.LocalPlayer
		local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
		local RunService = game:GetService("RunService")
	
		-- GUI Setup
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "DashGui"
		screenGui.Parent = PlayerGui
	
		local button = Instance.new("TextButton")
		button.Size = UDim2.new(0, 200, 0, 50)
		button.Position = UDim2.new(0.5, -100, 0.9, -25)
		button.Text = "Click to Dash"
		button.BackgroundColor3 = Color3.fromRGB(70, 180, 255)
		button.TextColor3 = Color3.new(1, 1, 1)
		button.Font = Enum.Font.SourceSansBold
		button.TextSize = 24
		button.Parent = screenGui
	
		-- Dash Function
		local isDashing = false
		local dashCooldown = false
	
		local function dash()
			if isDashing or dashCooldown then return end
			isDashing = true
			dashCooldown = true
	
			local character = LocalPlayer.Character
			if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	
			local hrp = character:FindFirstChild("HumanoidRootPart")
			local direction = hrp.CFrame.LookVector
			local dashPower = 100
	
			-- Change text while dashing
			button.Text = "Dash!"
	
			-- Apply dash velocity
			local bodyVelocity = Instance.new("BodyVelocity")
			bodyVelocity.Velocity = direction * dashPower
			bodyVelocity.MaxForce = Vector3.new(1e5, 0, 1e5)
			bodyVelocity.P = 5000
			bodyVelocity.Parent = hrp
	
			-- Remove velocity after short time
			game.Debris:AddItem(bodyVelocity, 0.2)
	
			wait(0.2)
			isDashing = false
			button.Text = "Click to Dash"
	
			-- Cooldown
			wait(1)
			dashCooldown = false
		end
	
		-- Connect button click
		button.MouseButton1Click:Connect(dash)
	end)
end;
task.spawn(C_26);
-- StarterGui.ScreenGui.Main Gui.ScrollingFrame.TextButton.LocalScript
local function C_29()
local script = G2L["29"];
	script.Parent.MouseButton1Click:Connect(function()
		local main = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local up = Instance.new("TextButton")
		local down = Instance.new("TextButton")
		local onof = Instance.new("TextButton")
		local TextLabel = Instance.new("TextLabel")
		local plus = Instance.new("TextButton")
		local speed = Instance.new("TextLabel")
		local mine = Instance.new("TextButton")
		local closebutton = Instance.new("TextButton")
		local mini = Instance.new("TextButton")
		local mini2 = Instance.new("TextButton")
	
		main.Name = "main"
		main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		main.ResetOnSpawn = false
	
		Frame.Parent = main
		Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
		Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
		Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
		Frame.Size = UDim2.new(0, 190, 0, 57)
	
		up.Name = "up"
		up.Parent = Frame
		up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
		up.Size = UDim2.new(0, 44, 0, 28)
		up.Font = Enum.Font.SourceSans
		up.Text = "UP"
		up.TextColor3 = Color3.fromRGB(0, 0, 0)
		up.TextSize = 14.000
	
		down.Name = "down"
		down.Parent = Frame
		down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
		down.Position = UDim2.new(0, 0, 0.491228074, 0)
		down.Size = UDim2.new(0, 44, 0, 28)
		down.Font = Enum.Font.SourceSans
		down.Text = "DOWN"
		down.TextColor3 = Color3.fromRGB(0, 0, 0)
		down.TextSize = 14.000
	
		onof.Name = "onof"
		onof.Parent = Frame
		onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
		onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
		onof.Size = UDim2.new(0, 56, 0, 28)
		onof.Font = Enum.Font.SourceSans
		onof.Text = "fly"
		onof.TextColor3 = Color3.fromRGB(0, 0, 0)
		onof.TextSize = 14.000
	
		TextLabel.Parent = Frame
		TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
		TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
		TextLabel.Size = UDim2.new(0, 100, 0, 28)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.Text = "FLY GUI V3"
		TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
	
		plus.Name = "plus"
		plus.Parent = Frame
		plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
		plus.Position = UDim2.new(0.231578946, 0, 0, 0)
		plus.Size = UDim2.new(0, 45, 0, 28)
		plus.Font = Enum.Font.SourceSans
		plus.Text = "+"
		plus.TextColor3 = Color3.fromRGB(0, 0, 0)
		plus.TextScaled = true
		plus.TextSize = 14.000
		plus.TextWrapped = true
	
		speed.Name = "speed"
		speed.Parent = Frame
		speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
		speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
		speed.Size = UDim2.new(0, 44, 0, 28)
		speed.Font = Enum.Font.SourceSans
		speed.Text = "1"
		speed.TextColor3 = Color3.fromRGB(0, 0, 0)
		speed.TextScaled = true
		speed.TextSize = 14.000
		speed.TextWrapped = true
	
		mine.Name = "mine"
		mine.Parent = Frame
		mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
		mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
		mine.Size = UDim2.new(0, 45, 0, 29)
		mine.Font = Enum.Font.SourceSans
		mine.Text = "-"
		mine.TextColor3 = Color3.fromRGB(0, 0, 0)
		mine.TextScaled = true
		mine.TextSize = 14.000
		mine.TextWrapped = true
	
		closebutton.Name = "Close"
		closebutton.Parent = main.Frame
		closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)
		closebutton.Font = "SourceSans"
		closebutton.Size = UDim2.new(0, 45, 0, 28)
		closebutton.Text = "X"
		closebutton.TextSize = 30
		closebutton.Position =  UDim2.new(0, 0, -1, 27)
	
		mini.Name = "minimize"
		mini.Parent = main.Frame
		mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
		mini.Font = "SourceSans"
		mini.Size = UDim2.new(0, 45, 0, 28)
		mini.Text = "-"
		mini.TextSize = 40
		mini.Position = UDim2.new(0, 44, -1, 27)
	
		mini2.Name = "minimize2"
		mini2.Parent = main.Frame
		mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
		mini2.Font = "SourceSans"
		mini2.Size = UDim2.new(0, 45, 0, 28)
		mini2.Text = "+"
		mini2.TextSize = 40
		mini2.Position = UDim2.new(0, 44, -1, 57)
		mini2.Visible = false
	
		speeds = 1
	
		local speaker = game:GetService("Players").LocalPlayer
	
		local chr = game.Players.LocalPlayer.Character
		local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
	
		nowe = false
	
		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "FLY GUI V3";
			Text = "BY XNEO";
			Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
		Duration = 5;
	
		Frame.Active = true -- main = gui
		Frame.Draggable = true
	
		onof.MouseButton1Down:connect(function()
	
			if nowe == true then
				nowe = false
	
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
				speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
			else 
				nowe = true
	
	
	
				for i = 1, speeds do
					spawn(function()
	
						local hb = game:GetService("RunService").Heartbeat	
	
	
						tpwalking = true
						local chr = game.Players.LocalPlayer.Character
						local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
						while tpwalking and hb:Wait() and chr and hum and hum.Parent do
							if hum.MoveDirection.Magnitude > 0 then
								chr:TranslateBy(hum.MoveDirection)
							end
						end
	
					end)
				end
				game.Players.LocalPlayer.Character.Animate.Disabled = true
				local Char = game.Players.LocalPlayer.Character
				local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	
				for i,v in next, Hum:GetPlayingAnimationTracks() do
					v:AdjustSpeed(0)
				end
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
				speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
				speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
			end
	
	
	
	
			if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
	
	
	
				local plr = game.Players.LocalPlayer
				local torso = plr.Character.Torso
				local flying = true
				local deb = true
				local ctrl = {f = 0, b = 0, l = 0, r = 0}
				local lastctrl = {f = 0, b = 0, l = 0, r = 0}
				local maxspeed = 50
				local speed = 0
	
	
				local bg = Instance.new("BodyGyro", torso)
				bg.P = 9e4
				bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				bg.cframe = torso.CFrame
				local bv = Instance.new("BodyVelocity", torso)
				bv.velocity = Vector3.new(0,0.1,0)
				bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
				if nowe == true then
					plr.Character.Humanoid.PlatformStand = true
				end
				while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
					game:GetService("RunService").RenderStepped:Wait()
	
					if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
						speed = speed+.5+(speed/maxspeed)
						if speed > maxspeed then
							speed = maxspeed
						end
					elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
						speed = speed-1
						if speed < 0 then
							speed = 0
						end
					end
					if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
					elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					else
						bv.velocity = Vector3.new(0,0,0)
					end
					--	game.Players.LocalPlayer.Character.Animate.Disabled = true
					bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
				end
				ctrl = {f = 0, b = 0, l = 0, r = 0}
				lastctrl = {f = 0, b = 0, l = 0, r = 0}
				speed = 0
				bg:Destroy()
				bv:Destroy()
				plr.Character.Humanoid.PlatformStand = false
				game.Players.LocalPlayer.Character.Animate.Disabled = false
				tpwalking = false
	
	
	
	
			else
				local plr = game.Players.LocalPlayer
				local UpperTorso = plr.Character.UpperTorso
				local flying = true
				local deb = true
				local ctrl = {f = 0, b = 0, l = 0, r = 0}
				local lastctrl = {f = 0, b = 0, l = 0, r = 0}
				local maxspeed = 50
				local speed = 0
	
	
				local bg = Instance.new("BodyGyro", UpperTorso)
				bg.P = 9e4
				bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				bg.cframe = UpperTorso.CFrame
				local bv = Instance.new("BodyVelocity", UpperTorso)
				bv.velocity = Vector3.new(0,0.1,0)
				bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
				if nowe == true then
					plr.Character.Humanoid.PlatformStand = true
				end
				while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
					wait()
	
					if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
						speed = speed+.5+(speed/maxspeed)
						if speed > maxspeed then
							speed = maxspeed
						end
					elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
						speed = speed-1
						if speed < 0 then
							speed = 0
						end
					end
					if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
					elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
						bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					else
						bv.velocity = Vector3.new(0,0,0)
					end
	
					bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
				end
				ctrl = {f = 0, b = 0, l = 0, r = 0}
				lastctrl = {f = 0, b = 0, l = 0, r = 0}
				speed = 0
				bg:Destroy()
				bv:Destroy()
				plr.Character.Humanoid.PlatformStand = false
				game.Players.LocalPlayer.Character.Animate.Disabled = false
				tpwalking = false
	
	
	
			end
	
	
	
	
	
		end)
	
		local tis
	
		up.MouseButton1Down:connect(function()
			tis = up.MouseEnter:connect(function()
				while tis do
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
				end
			end)
		end)
	
		up.MouseLeave:connect(function()
			if tis then
				tis:Disconnect()
				tis = nil
			end
		end)
	
		local dis
	
		down.MouseButton1Down:connect(function()
			dis = down.MouseEnter:connect(function()
				while dis do
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
				end
			end)
		end)
	
		down.MouseLeave:connect(function()
			if dis then
				dis:Disconnect()
				dis = nil
			end
		end)
	
	
		game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
			wait(0.7)
			game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
			game.Players.LocalPlayer.Character.Animate.Disabled = false
	
		end)
	
	
		plus.MouseButton1Down:connect(function()
			speeds = speeds + 1
			speed.Text = speeds
			if nowe == true then
	
	
				tpwalking = false
				for i = 1, speeds do
					spawn(function()
	
						local hb = game:GetService("RunService").Heartbeat	
	
	
						tpwalking = true
						local chr = game.Players.LocalPlayer.Character
						local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
						while tpwalking and hb:Wait() and chr and hum and hum.Parent do
							if hum.MoveDirection.Magnitude > 0 then
								chr:TranslateBy(hum.MoveDirection)
							end
						end
	
					end)
				end
			end
		end)
		mine.MouseButton1Down:connect(function()
			if speeds == 1 then
				speed.Text = 'cannot be less than 1'
				wait(1)
				speed.Text = speeds
			else
				speeds = speeds - 1
				speed.Text = speeds
				if nowe == true then
					tpwalking = false
					for i = 1, speeds do
						spawn(function()
	
							local hb = game:GetService("RunService").Heartbeat	
	
	
							tpwalking = true
							local chr = game.Players.LocalPlayer.Character
							local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
							while tpwalking and hb:Wait() and chr and hum and hum.Parent do
								if hum.MoveDirection.Magnitude > 0 then
									chr:TranslateBy(hum.MoveDirection)
								end
							end
	
						end)
					end
				end
			end
		end)
	
		closebutton.MouseButton1Click:Connect(function()
			main:Destroy()
		end)
	
		mini.MouseButton1Click:Connect(function()
			up.Visible = false
			down.Visible = false
			onof.Visible = false
			plus.Visible = false
			speed.Visible = false
			mine.Visible = false
			mini.Visible = false
			mini2.Visible = true
			main.Frame.BackgroundTransparency = 1
			closebutton.Position =  UDim2.new(0, 0, -1, 57)
		end)
	
		mini2.MouseButton1Click:Connect(function()
			up.Visible = true
			down.Visible = true
			onof.Visible = true
			plus.Visible = true
			speed.Visible = true
			mine.Visible = true
			mini.Visible = true
			mini2.Visible = false
			main.Frame.BackgroundTransparency = 0 
			closebutton.Position =  UDim2.new(0, 0, -1, 27)
		end)
	end)
end;
task.spawn(C_29);
-- StarterGui.ScreenGui.Main Gui.MakeFrameDraggable
local function C_2a()
local script = G2L["2a"];
	local frame = script.Parent
	frame.Active = true
	frame.Draggable = false -- Ensure Draggable is off
	
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart = nil
	local startPos = nil
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        local delta = input.Position - dragStart
	        frame.Position = UDim2.new(
	            startPos.X.Scale,
	            startPos.X.Offset + delta.X,
	            startPos.Y.Scale,
	            startPos.Y.Offset + delta.Y
	        )
	    end
	end)
	
	
end;
task.spawn(C_2a);
-- StarterGui.ScreenGui.Main Gui.TextButton.LocalScript
local function C_2d()
local script = G2L["2d"];
	function vis()
		script.Parent.Parent.Visible = false
	end
	
	script.Parent.MouseButton1Click:Connect(vis)
end;
task.spawn(C_2d);
-- StarterGui.ScreenGui.Gar.MakeFrameDraggable
local function C_30()
local script = G2L["30"];
	local frame = script.Parent
	frame.Active = true
	frame.Draggable = false -- Ensure Draggable is off
	
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart = nil
	local startPos = nil
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        local delta = input.Position - dragStart
	        frame.Position = UDim2.new(
	            startPos.X.Scale,
	            startPos.X.Offset + delta.X,
	            startPos.Y.Scale,
	            startPos.Y.Offset + delta.Y
	        )
	    end
	end)
	
	
end;
task.spawn(C_30);
-- StarterGui.ScreenGui.Gar.LocalScript
local function C_32()
local script = G2L["32"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent["Main Gui"].Visible = true
	end)
end;
task.spawn(C_32);

return G2L["1"], require;
